/*<<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>>
 //|üîö|\\ //|üõë|\\ //|‚õîÔ∏è|\\pdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqp
//http://www.patorjk.com/


                                                    rM2
                                                    2BB
                                                  ,rMBBssk
                                                 ,MGs:i2Br,
                                               :Ms,      :M9,
                                               Bs ,rs25si  Mi
                                              rs 2BBBBBBBBr 2,
                                          ,r:92 BBBBMMMMBBBs Bs,sr
                                         sh  9 :BBMMMMMMMMBB sS, :9
                                        2s MBB ,BBMMMMMMMBBB srrrrks
                                       iG BBBBs GBBBBMBBBBB  BBBBB :s
                                       B, BBBBBi iBBBBBBBS  BBBBBM 2s
                                        B  BBBBB2   ,:,   :XBBBBs GB
                                        rB        sMssr2Bs        Bs
                                        sB  :ssr  ,B   ,2: iBBBBG :B
                                        B: BBBBBBi B ,:s9:,BBBBBBB  G
   88888888888888888  88888888888888888 r BBBBBBBB ,:rs:  SBBBBBBB ,5 888888888888888    8888888888888888   8888888888888888   8888888888888888    88888888888888888   88888888888888888   88888888888888888 
  888888888888888888 888888888888888888 B rBBBBBBG ,GBBM2  MBBBBBi B 88888888888888888  pdbqpdbpdbqpdbqpbq 888888888888888888 888888888888888888  8888888888888888889 8888888888888888889 8888888888888888889
         88O8n                      8O88 B ,hG92: :BBBBBBB    ,,  h  88O8               88O89              88O89              O8O8O                              8O88                8O88                8O88
         88O8n         nnnnnnnn    n8O88 :B       sBBBBBBB  rGhiiB9  8888               88O8O              88O8O              O8O88nnnnnnnnnn       nnnnnnnn    n8O88   nnnnnnnn    n8O88   nnnnnnnn    n8O88
         88O8n       888888888888888OO88   iBBBBBs 9BBBBBi BBs    9B  888     88888888  88O88    n8888888O 88O88    n8888888O 98OO888888888888    888888888888888O889 888888888888888O889 888888888888888O889
         88O89       88888    n888O88888  iBBBBBBBr  ,:,  BBM       B 888     n99nn888  88O8O     89nnO88O 88O8O     89nnO88O 98O88               8888O    888OOO888O 8888O    888OOO888O 8888O    888OOO888O
         88889       88O88     n8OO88O   XBs,sBBBBBGG9GMBM,2B5   :s:s 8O8n         O88  88O8O         n889 88O8O         n889 98O8O               88O8n     88OO888   88O8n     88OO888   88O8n     88OO888
         88889       88888     n8888    BB         BBXsr22:,MB,  i  G 8888888888888888  888888888888888888 888888888888888888 888888888888888888  8888O     88O88     8888O     88O88     8888O     88O88
         8888O       88888     8888     B:         Bs   is    rs9:  h 8888888888888888   8888888888888888O  8888888888888888O  88888888888888888  88888     8888      88888     8888      88888     8888
                               8888     MM         Bs   r2r,    r9 XG                                                                                       8889                8889                8889
                                888      BBBX,     BX   :9r     sBGB:                                                                                       n889                n889                n889
                                n88     sBBBBBBBG9SBX   :SBBG2ssGMB                                                                                          988                 988                 988
                                  88   ,BB2     ,  MBBBBBB,,:,,,  B                                                                                           n88                 n88                 n88
                                   n8n ,BB          :rrri         B                                                                                             98n                 98n                 98n
                                        sBi                     sB,
                                         BBM5r:,           ,r2XX9Ms
                                        sBBB2s29MBBhsiirrrrr:,    B
                                        sBBi       ,:i,,         ,M
                                         BBG                  ,iM9
                                          hBBB2sr:,       ,irssi2B
                                           BBr ,:s599S2sri:,    :B
                                           BB                 ,sM
                                            MMs,          ,sBBBB
                                              rBBBBBB9XBBBBBr:r9
                                               B9r:BBG9h2i2X,:sG
                                               BMisBs      M:hBi
                                                2MhBs      BMM,
                                                  :BB::irsBB
                                                    SMMMGSr


                                                  


/*                                                                                                  1                                                                                                   2
0                                                                                                   0                                                                                                   0
0         1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7         8         9         0
 123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789 1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567*/
     /*|XXXXXXXXXX                                                                                 X X                                                                                 XXXXXXXXXX|*/
     /*|123456XX                                                                                   X X                                                                                   XX1XXX5X|*/
     /*|XXXXXX                                                                                     X X                                                                                      XXXXX|*/
     /*|XXXX                                                                                       X X                                                                                       XXXX|*/
     /*|XXX                                                                                        X X                                                                                        XXX|*/
     /*|XXX                                                                                        X X                                                                                         XX|*/
     /*|X/                    ‚ï¶‚ïî‚ïó‚ïî  ‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó‚ïî‚ï¶‚ïó‚ïî‚ïê‚ïó  ‚ïî‚ïó ‚ï¶ ‚ï¶‚ïî‚ï¶‚ïó‚ïî‚ï¶‚ïó‚ïî‚ïê‚ïó‚ïî‚ïó‚ïî‚ïî‚ïê‚ïó                            X X                           ‚ïî‚ï¶‚ïó‚ïî‚ïê‚ïó‚ïî‚ï¶‚ïó  ‚ïî‚ï¶‚ïó‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó‚ï¶  ‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó                              XX|*/
     /*|X/                    ‚ïë‚ïë‚ïë‚ïë  ‚ïë ‚ï¶‚ï†‚ïê‚ï£‚ïë‚ïë‚ïë‚ïë‚ï£   ‚ï†‚ï©‚ïó‚ïë ‚ïë ‚ïë  ‚ïë ‚ïë ‚ïë‚ïë‚ïë‚ïë‚ïö‚ïê‚ïó                            X X                           ‚ïë‚ïë‚ïë‚ïë ‚ïë ‚ïë‚ïë   ‚ïë ‚ïë ‚ïë‚ïë ‚ï¶‚ïë ‚ï¶‚ïë  ‚ïë‚ï£ ‚ïö‚ïê‚ïó                              XX|*/
     /*|X/                    ‚ï©‚ïù‚ïö‚ïù  ‚ïö‚ïê‚ïù‚ï© ‚ï©‚ï© ‚ï©‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù ‚ï©  ‚ï© ‚ïö‚ïê‚ïù‚ïù‚ïö‚ïù‚ïö‚ïê‚ïù                            X X                           ‚ï© ‚ï©‚ïö‚ïê‚ïù‚ïê‚ï©‚ïù   ‚ï© ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ï©‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù                              XX|*/
     /*|*/     define                                                                             /*|*/                                                                                        /*|*/
     /*|*/     Fire    = PS4_R2     ,    Edit    = PS4_TRIANGLE ,    Build   = PS4_CIRCLE   ,     /*|*/   AntiRecH    = PS4_L2      ,   RapidFModH  = PS4_L2      ,                            /*|*/
     /*|*/     Ads     = PS4_L2     ,    EAssist = PS4_TRIANGLE ,    Switch  = PS4_CIRCLE   ,     /*|*/   AntiRecP    = PS4_RIGHT   ,   RapidFModP  = PS4_LEFT    ,                            /*|*/
     /*|*/     NWeapon = PS4_R1     ,    Reset   = PS4_SHARE    ,    Wall    = PS4_R2       ,     /*|*/   AssistH     = PS4_L2      ,   KillSWH     = PS4_SHARE   , MenuEnterH  = PS4_L2      ,/*|*/
     /*|*/     PWeapon = PS4_L1     ,    Select  = PS4_SQUARE   ,    Floor   = PS4_R1       ,     /*|*/   AssistP     = PS4_UP      ,   KillSWP     = PS4_OPTIONS , MenuEnterP  = PS4_OPTIONS ,/*|*/
     /*|*/     Pickaxe = PS4_L3     ,    Confirm = PS4_L2       ,    Roof    = PS4_L1       ,     /*|*/   AutoFishH   = PS4_LEFT    ,   PumpSmgH    = PS4_SQUARE  , MenuExitP   = PS4_CIRCLE  ,/*|*/
     /*|*/     Reload  = PS4_SQUARE ,    Inven   = PS4_DOWN     ,    Ramp    = PS4_L2       ,     /*|*/   AutoFishP   = PS4_CROSS   ,   PumpSmgP    = PS4_LEFT    , ChangeMenuP = PS4_CROSS   ,/*|*/
     /*|*/     Jump    = PS4_CROSS  ,    Ping    = PS4_SHARE    ,    LS      = PS4_L3       ,     /*|*/   DropShotH   = PS4_SHARE   ,   ShootSwapH  = PS4_L2      , FindSlotH   = PS4_R3      ,/*|*/
     /*|*/     Crouch  = PS4_R3     ,    Map     = PS4_RIGHT    ,    Sprint  = PS4_L3       ,     /*|*/   DropShotP   = PS4_DOWN    ,   ShootSwapP  = PS4_SHARE   , FindSlotP   = PS4_LEFT    ,/*|*/
     /*|*/                               Menu    = PS4_OPTIONS  ,    Inventory=PS4_DOWN     ,     /*|*/   PerfAccH    = PS4_L2      ,   PerfAccP    = PS4_SQUARE  , RecoilOTF   = PS4_CROSS   ,/*|*/
     																									  RecoilUpP   = PS4_UP      ,   RecoilDnP   = PS4_DOWN    ,	
     																									  PumpBuildH  = PS4_L2      ,   PumpBuildP  = PS4_R1      ,
     /*|*/                                                                                        	                                                                                           /*|*/
     /*|XX                                                                  ‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó‚ï¶‚ïê‚ïó‚ï¶‚ïî‚ïê‚ïó‚ïî‚ï¶‚ïó  ‚ïî‚ï¶‚ïó‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó‚ï¶‚ïî‚ïó‚ïî‚ï¶‚ïî‚ï¶‚ïó‚ï¶‚ïî‚ïê‚ïó‚ïî‚ïó‚ïî‚ïî‚ïê‚ïó                                                                      XX|*/
     /*|XX                                                                  ‚ïö‚ïê‚ïó‚ïë  ‚ï†‚ï¶‚ïù‚ïë‚ï†‚ïê‚ïù ‚ïë    ‚ïë‚ïë‚ïë‚ï£ ‚ï†‚ï£ ‚ïë‚ïë‚ïë‚ïë‚ïë ‚ïë ‚ïë‚ïë ‚ïë‚ïë‚ïë‚ïë‚ïö‚ïê‚ïó                                                                      XX|*/
     /*|XX                                                                  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ï©‚ïö‚ïê‚ï©‚ï©   ‚ï©   ‚ïê‚ï©‚ïù‚ïö‚ïê‚ïù‚ïö  ‚ï©‚ïù‚ïö‚ïù‚ï© ‚ï© ‚ï©‚ïö‚ïê‚ïù‚ïù‚ïö‚ïù‚ïö‚ïê‚ïù                                                                      XX|*/
     /*|XX                                                                                                                                                                                     XX|*/
     /*|         |*/ LX     = PS4_LX           , /*|         |*/ Up     = PS4_UP           , /*|         |*/ TPAD   = PS4_TOUCH        , /*|         |*/ F1     = PS4_FINGER1      , /*|*/     /*|*/
     /*|         |*/ LY     = PS4_LY           , /*|         |*/ Down   = PS4_DOWN         , /*|         |*/ Share  = PS4_SHARE        , /*|         |*/ F1X    = PS4_FINGER1X     , /*|*/     /*|*/
     /*|         |*/ RX     = PS4_RX           , /*|         |*/ Left   = PS4_LEFT         , /*|         |*/ Opt    = PS4_OPTIONS      , /*||        |*/ F1Y    = PS4_FINGER1Y     , /*|*/     /*|*/
     /*|         |*/ RY     = PS4_RY           , /*|         |*/ Right  = PS4_RIGHT        , /*|         |*/ PS     = PS4_PS           , /*||        |*/ F2     = PS4_FINGER2      , /*|*/     /*|*/
     /*|    V    |*/ PRX    = POLAR_RX         , /*|    V    |*/ RumbA  = RUMBLE_A         , /*|    V    |*/ T1     = TRACE_1          , /*||   V    |*/ F2X    = PS4_FINGER2X     , /*|    V    |*/
     /*|    E    |*/ PRY    = POLAR_RY         , /*|    E    |*/ RumbB  = RUMBLE_B         , /*|    E    |*/ T2     = TRACE_2          , /*|    E    |*/ F2Y    = PS4_FINGER2Y     , /*|    E    |*/
     /*|    R    |*/ RS     = POLAR_RS         , /*|    R    |*/ RumbLT = RUMBLE_LT        , /*|    R    |*/ T3     = TRACE_3          , /*|    R    |*/ P1     = PS4T_P1          , /*|    R    |*/
     /*|    S    |*/ aimX   = PS4_RX           , /*|    S    |*/ RumbRT = RUMBLE_RT        , /*|    S    |*/ T4     = TRACE_4          , /*|    S    |*/ P1X    = PS4T_P1X         , /*|    S    |*/
     /*|    A    |*/ aimY   = PS4_RY           , /*|    A    |*/ On     = TRUE             , /*|    A    |*/ T5     = TRACE_5          , /*|    A    |*/ P1Y    = PS4T_P1Y         , /*|    A    |*/
     /*|         |*/ DZ     = DZ_CIRCLE        , /*|         |*/ Off    = FALSE            , /*|         |*/ T6     = TRACE_6          , /*|         |*/ P2     = PS4T_P2          , /*|         |*/
     /*|         |*/                             /*|         |*/                             /*|         |*/                             /*|         |*/ P2X    = PS4T_P2X         , /*|      	 |*/
     /*|         |*/                             /*|         |*/                             /*|         |*/                             /*|         |*/ P2Y    = PS4T_P2Y         ; /*|         |*/

/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îÇ*/                                                                                                                                                                                     /*‚îÇ*/
/*‚îÇ*/             function g(id)     {return get_ival(id);     } function s(id,fval) {set_val(id,fval);                    }     function p(id)     {return event_press(id);  }           /*‚îÇ*/
/*‚îÇ*/             function gl(id)    {return get_lval(id);     } function btn(f__btn){if (!g(f__btn))return;s(f__btn, 0);  }     function r(id)     {return event_release(id);}           /*‚îÇ*/
/*‚îÇ*/                                                            function hrt(h__btn){if (!g(h__btn))return;s(h__btn, 100);}                                                              /*‚îÇ*/
/*‚îÇ*/                                                                                                                                                                                     /*‚îÇ*/
/*‚îÇ*/                                function displ(v0, v1, v2, v3, v4, v5) {s(T1, v0); s(T2, v1); s(T3, v2); s(T4, v3); s(T5, v4); s(T6, v5);}                                           /*‚îÇ*/
/*‚îÇ*/                                                                                                                                                                                     /*‚îÇ*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îÇ*/ const uint8 FontSize [][] = {{ 7, 10, 18 },{ 11, 18, 11 },{ 16, 26, 7 }};	const uint8 FontDigits [] = {48,49,50,51,52,53,54,55,56,57}; /*‚îÇ*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îÇ*/  const string MiscString [] = { /*‚îÇ*/
/*‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/                         /*‚îÇ*/
/*‚îÇ  1--  ‚îÇ*/ "MOD             ",     /*‚îÇ*/
/*‚îÇ  2--  ‚îÇ*/ "  ON            ",     /*‚îÇ*/
/*‚îÇ  3--  ‚îÇ*/ "  OFF           ",     /*‚îÇ*/
/*‚îÇ  4--  ‚îÇ*/ "    VERSA5 DOGS ",     /*‚îÇ*/
/*‚îÇ  5--  ‚îÇ*/ "    DECIDER XII ",     /*‚îÇ*/
/*‚îÇ  6--  ‚îÇ*/ "    GPC Slot:   ",     /*‚îÇ*/
/*‚îÇ  7--  ‚îÇ*/ "     Enabled    ",     /*‚îÇ*/
/*‚îÇ  8--  ‚îÇ*/ "    Disabled    ",     /*‚îÇ*/
/*‚îÇ  9--  ‚îÇ*/ "Mod Toggle On/Off"  }; /*‚îÇ*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/
 const string ModToggle [] = {"" ,
 " AIM ASSIST EXPO ",
 " AIM ASSIST LIN  ",
 " ANTI RECOIL     ",
 " AUTO EDIT RESET ",
 " AUTO FISH       ",
 " AUTO RUN        ",
 " BATTS SH SWAP   ",
 " BUILD BOOST     ",
 " BUILDER PRO     ",
 " CROUCH ON L2    ",
 " CUSTOM TRIGGER  ",
 " DAMS PUMP SMG   ",
 " DROPSHOT        ",
 " DYNAMIC DEADZ   ",
 " EDIT ASSIST     ",
 " EDIT CANCEL     ",
 " LINEAR SENS     ",
 " ONE FING RESET  ",
 " PERFECT ACC     ",
 " PROGRESSION AR  ",
 " PUMP BUILD      ",
 " RAMP RUSH       ",
 " RAPID FIRE      ",
 " REDUCER         ",
 " SMART TRACK     ",
 " STATIC DEADZ    ",
 " STRAFE          ",
 " TOP EDIT        ",
 " VERSA SENS      ",
 " VERSA TOUCH     ",
 " iPICKAXE        " };							

int ModSW,
AimAssist_EXP  = On   ,
AimAssist_LIN  = Off   ,
AntiRecoil     = On  ,
AutoEditRes    = On   ,
AutoFish       = Off  ,
AutoRun        = On   ,
BattsShootSwap = Off  ,
BuildBST       = Off   ,
BuilderPro     = Off  ,
CrouchOnL2     = On   ,
CustomTrig     = Off  ,
DAMsPumpSmg    = Off  ,
DropShot       = 1    ,
DynamicDZ      = Off  ,
EditAssist     = On   ,
EditCancel     = On   ,
LinearSens     = Off  ,
OneFingerReset = On   ,
PerfAcc        = On   ,
ProgressionAR  = Off  ,
PumpBuild      = On   ,
RampRush       = Off  ,
RapidFire      = On   ,
Reducer        = On   ,
SmartTrack     = On   ,
StaticDZ       = On   ,
Strafe         = Off   ,
TopEdit        = On   ,
VersaSens      = On   ,
VersaTouch     = On   ,
iPickaxe       = Off  ;

// ADDED MODS NOT IN MENU
int ShotgunReSync = On;
int OnlyEditSens = Off


const string
ModValue [] = {""  ,         /*| MOD_VAL |*/
"    VM_CONTROL          ",  /*|   001   |*/
"    BTN_UPDATE_INTV     ",  /*|   002   |*/
"    LAG_TIME_INTV       ",  /*|   003   |*/
"    LIN ASSIST STR      ",  /*|   004   |*/
"    EXPO ASSISTT STR    ",  /*|   005   |*/
"    AIM_ASSIST_INC      ",  /*|   006   |*/
"    BUILD_SYNC_T        ",  /*|   007   |*/
"    CROUCH_SHOT_T       ",  /*|   008   |*/
"    EDIT_CAN_DELAY      ",  /*|   009   |*/
"    EDIT_DELAY_ONE      ",  /*|   010   |*/

"    EDIT_DELAY_TWO      ",  /*|   011   |*/
"    ANTI_RECOIL         ",  /*|   012   |*/
"    PROG_REC_START      ",  /*|   013   |*/
"    PROG_REC_END        ",  /*|   014   |*/
"    DROP_DUB_TAP_T      ",  /*|   015   |*/
"    DROP_SHOT_DN_T      ",  /*|   016   |*/
"    DROP_SHOT_UP_T      ",  /*|   017   |*/
"    PERF_ACC TIME       ",  /*|   018   |*/
"    PICK_PRESS_TIME     ",  /*|   019   |*/
"    PICK_REL_TIME       ",  /*|   020   |*/

"    PUMP_BUILD_T        ",  /*|   021   |*/
"    RAMP_RUSH_TIME      ",  /*|   022   |*/
"    RAPID_FIRE_PRES     ",  /*|   023   |*/
"    RAPID_FIRE_WAIT     ",  /*|   024   |*/
"    SHOOT_SWAP_TIME     ",  /*|   025   |*/
"    WALL_TAKE_ONE       ",  /*|   026   |*/
"    WALL_TAKE_TWO       ",  /*|   027   |*/
"    COMBAT_SENS_H       ",  /*|   028   |*/
"    COMBAT_SENS_V       ",  /*|   029   |*/
"    ADS_ONLY            ",  /*|   030   |*/

"    FIRE_ONLY           ",  /*|   031   |*/
"    ADS_PLUS_FIRE       ",  /*|   032   |*/
"    AIM_DEADZ_L         ",  /*|   033   |*/
//"    AIM_DZR	         ",  /*|   034   |*/
"    AIM_MIDZONE         ",  /*|   035   |*/
"    BUILD_SENS_HORIZ    ",  /*|   036   |*/
"    BUILD_SENS_VERTICAL ",  /*|   037   |*/
"    BUILD_MIDZONE       ",  /*|   038   |*/
"    EDIT_MIDZONE        ",  /*|   039   |*/
"    EDIT_SENS           ",  /*|   040   |*/

"    COMBAT_DZL          ",  /*|   041   |*/
"    COMBAT_DZR          ",  /*|   042   |*/
"    BUILD_DZL           ",  /*|   043   |*/
"    BUILD_DZR           ",  /*|   044   |*/
"    BUILD_BST_DZL       ",  /*|   045   |*/
"    BUILD_BST_DZR       ",  /*|   046   |*/
"    BUILD_BOOST_INC     ",  /*|   047   |*/
"    BUILD_BST_CURVE     ",  /*|   048   |*/
"    EDIT_DZL            ",  /*|   049   |*/
"    EDIT_DZR            ",  /*|   050   |*/

"    STATIC_DZL          ",  /*|   051   |*/
"    STATIC_DZR          "   /*|   052   |*/
 };                          /*|   053   |*/
                             /*|   054   |*/
                             /*|   055   |*/
                             /*|   056   |*/
                             /*|   057   |*/
                             /*|   058   |*/
                             /*|   059   |*/
                             /*|   060   |*/



  int ModDigit
, VMControlT       = -4
, BTNUpdate        = 30
, LagOffset        = 0
, LINAssistStr     = 17
, EXPOAssistStr    = 27
, AimAssistInc     = 5
, BSynT            = 10000
, crouchshotT      = 40
, EditCancDelay    = 30
, EditDelay        = 30

, EditDelay2       = 30
, AntiRecT         = 50
, ArProgStart      = 40
, ArProgFinish     = 35
, DropDubTapT      = 80
, DropUpTime       = 40
, DropDnTime       = 80
, PerfAccTime      = 200
, PickaxePresT     = 40
, PickaxeRelT      = 90

, PumpBuildT       = 70
, RampRushT        = 200
, RapidPressTime   = 20
, RapidHoldTime    = 20
, BattsSwapT       = 50
, walltakeT        = 40
, walltakeT2       = 80
, CombatSensH      = 100
, CombatSensV      = 100
, AdsOnly          = 96

, FireOnly         = 99
, AdsPlusFire      = 97
, AimDZL           = 5
, AimDZR           = 5
, AimMZ            = 50
, BuildSensH       = 102
, BuildSensV       = 102
, BuildMZ          = 50
, EditMZ           = 40
, EditSens         = 90

, CombatDZL        = 10
, CombatDZR        = 8
, BuildDZL         = 3
, BuildDZR         = 3
, BuildBSTDZL      = 6
, BuildBSTDZR      = 6
, BuildBSTInc      = 0
, BuildBSTCurve    = 50
, EditDZL          = 3
, EditDZR          = 3

, StaticDZL        = 10
, StaticDZR        = 10
:


int BumperReleaseT = 50;


const int16
ModDigitMin [] = {       0
/*  VM_CONTROL         */ ,  20
/*  BTN_UPDATE_INTV    */ ,  60
/*  LAG_TIME_INTV      */ ,  10
/*  LIN ASSIST STR     */ ,  10
/*  EXPO ASSISTT STR   */ ,  10
/*  AIM_ASSIST_INC     */ ,  15
/*  BUILD_SYNC_T       */ ,  20
/*  CROUCHSHOT_T       */ ,  20
/*  EDIT_CAN_DELAY     */ ,  25
/*  EDIT_DELAY_ONE     */ ,  25

/*  EDIT_DELAY_TWO     */ ,  25
/*  ANTI_RECOIL        */ ,  25
/*  PROG_REC_START     */ ,  25
/*  PROG_REC_END       */ ,  25
/*  DROP_DUB_TAP_T     */ ,  25
/*  DROP_SHOT_DN_T     */ ,  25
/*  DROP_SHOT_UP_T     */ ,  25
/*  PERF_ACC TIME      */ ,  25
/*  PICK_PRESS_TIME    */ ,  25
/*  PICK_REL_TIME      */ ,  25

/*  PUMP_BUILD_T       */ ,  25
/*  RAMP_RUSH_TIME     */ ,  25
/*  RAPID_FIRE_PRES    */ ,  25
/*  RAPID_FIRE_WAIT    */ ,  25
/*  SHOOT_SWAP_TIME    */ ,  25
/*  WALL_TAKE_ONE      */ ,  25
/*  WALL_TAKE_TWO      */ ,  25
/*  COMBAT_SENS_H      */ ,  25
/*  COMBAT_SENS_V      */ ,  25
/*  ADS_ONLY           */ ,  25

/*  FIRE_ONLY          */ ,  25
/*  ADS_PLUS_FIRE      */ ,  25
/*  AIM_DZL		       */ ,  25
/*  AIM_DZR		       */ ,  25
/*  AIM_MIDZONE        */ ,  25
/*  BUILD_SENS_HORIZ   */ ,  25
/*  BUILD_SENS_VERTICAL*/ ,  25
/*  BUILD_MIDZONE      */ ,  25
/*  EDIT_MIDZONE       */ ,  25
/*  EDIT_SENS          */ ,  25

/*  COMBAT_DZL         */ ,  25
/*  COMBAT_DZR         */ ,  25
/*  BUILD_DZL          */ ,  25
/*  BUILD_DZR          */ ,  25
/*  BUILD_BST_DZL      */ ,  25
/*  BUILD_BST_DZR      */ ,  25
/*  BUILD_BOOST_INC    */ ,  25
/*  BUILD_BST_CURVE    */ ,  25
/*  EDIT_DZL           */ ,  25
/*  EDIT_DZR           */ ,  25

/*  STATIC_DZL         */ ,  25
/*  STATIC_DZR         */ ,  26
/*                     */ };
/*                     */
             
const int16
ModDigitMax [] = {            0
/*  VM_CONTROL         */ ,  20
/*  BTN_UPDATE_INTV    */ ,  60
/*  LAG_TIME_INTV      */ ,  100
/*  LIN ASSIST STR     */ ,  100
/*  EXPO ASSISTT STR   */ ,  100
/*  AIM_ASSIST_INC     */ ,  15
/*  BUILD_SYNC_T       */ ,  2000
/*  CROUCHSHOT_T       */ ,  2000
/*  EDIT_CAN_DELAY     */ ,  250
/*  EDIT_DELAY_ONE     */ ,  250

/*  EDIT_DELAY_TWO     */ ,  250
/*  ANTI_RECOIL        */ ,  250
/*  PROG_REC_START     */ ,  250
/*  PROG_REC_END       */ ,  250
/*  DROP_DUB_TAP_T     */ ,  250
/*  DROP_SHOT_DN_T     */ ,  250
/*  DROP_SHOT_UP_T     */ ,  250
/*  PERF_ACC TIME      */ ,  250
/*  PICK_PRESS_TIME    */ ,  250
/*  PICK_REL_TIME      */ ,  250

/*  PUMP_BUILD_T       */ ,  250
/*  RAMP_RUSH_TIME     */ ,  250
/*  RAPID_FIRE_PRES    */ ,  250
/*  RAPID_FIRE_WAIT    */ ,  250
/*  SHOOT_SWAP_TIME    */ ,  250
/*  WALL_TAKE_ONE      */ ,  250
/*  WALL_TAKE_TWO      */ ,  250
/*  COMBAT_SENS_H      */ ,  250
/*  COMBAT_SENS_V      */ ,  250
/*  ADS_ONLY           */ ,  250

/*  FIRE_ONLY          */ ,  250
/*  ADS_PLUS_FIRE      */ ,  250
/*  AIM_DZL		       */ ,  80
/*  AIM_DZR		       */ ,  80
/*  AIM_MIDZONE        */ ,  250
/*  BUILD_SENS_HORIZ   */ ,  250
/*  BUILD_SENS_VERTICAL*/ ,  250
/*  BUILD_MIDZONE      */ ,  80
/*  EDIT_MIDZONE       */ ,  250
/*  EDIT_SENS          */ ,  250

/*  COMBAT_DZL         */ ,  250
/*  COMBAT_DZR         */ ,  250
/*  BUILD_DZL          */ ,  250
/*  BUILD_DZR          */ ,  250
/*  BUILD_BST_DZL      */ ,  250
/*  BUILD_BST_DZR      */ ,  250
/*  BUILD_BOOST_INC    */ ,  250
/*  BUILD_BST_CURVE    */ ,  250
/*  EDIT_DZL           */ ,  250
/*  EDIT_DZR           */ ,  250

/*  STATIC_DZL         */ ,  250
/*  STATIC_DZR         */ ,  260
/*                     */ };
/*                     */
           
const int16
ModIncrement[] = {
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/  0    ,
/*‚îÇ  1--  ComSens       ‚îÇ*/  1    }; 
							 
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îÇ*/                                                   /*‚îÇ*/
/*‚îÇ*/  const string AimAssistL   = " Aim Assist      "; /*‚îÇ*/
/*‚îÇ*/  const string AntiRecoilL  = " AntiRecoil      "; /*‚îÇ*/
/*‚îÇ*/  const string AutoFishL    = " Auto Fish       "; /*‚îÇ*/
/*‚îÇ*/  const string KillSWL      = " KillSW          "; /*‚îÇ*/
/*‚îÇ*/  const string RapidFireL   = " Rapid Fire Mod  "; /*‚îÇ*/
/*‚îÇ*/  const string ShootSwapL   = " ShootSwap       "; /*‚îÇ*/
/*‚îÇ*/  const string ProPickL     = " ProPick         "; /*‚îÇ*/







/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îÇ*/ define    TimeoutLimit = 2,       TimeoutLimitM = 20000,          IndexMinSWes = 1,           IndexMaxSWes = 29,          IndexMinValues = 1,      IndexMaxValues = 52;   /*‚îÇ*/
/*‚îÇ*/   int          ScrollX = 64,            ScrollY = 50,                  ScrollSpeed = 70,               ScrollDelay = 950,                 Number = 1,                Slot = 20000;/*‚îÇ*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/				
//	ùêåùêÑùêçùêî ùêÅùêîùêìùêìùêéùêçùêí 
// ZenDevice-Int
int ScrollTime,ScrollWait,ScrollLine,ScrollIndex,ScrollChar,Position,Update,MenuTimeout,Count,MainMenu,ModIndex,MenuValues,MenuSW,menuVar,NumX,NumY,NumS,Clear,blockBtn;

int ToggleT,ToggleTime,ToggleName,Modled,vibrateA,vibrateB; int Actual_Rx,Actual_Ry,Last_Rx,Last_Ry, returnAxis; int rtime[21],triggerRelease,BumperTog,DaM,Trigger,BattsShootSwapVar,message_timeout;

int KillSwitch,AimAssistMod,AntiRecoilMod,AutoFishMod,ShootSwapMod,ProPickMod,RapidFMod; int ActiveSensH,ActiveSensV,ActiveMZ,ActiveDZL,ActiveDZR,DZCheck;

int profile_1_on = TRUE,profile_2_on,profile_3_on,profile_4_on,profile_5_on,MenuReSync;

int PressedMenu,PickaxeVar,PickBuildVar,BuildVar,EditVar,CombatVar,UpVar,modetracking;	 int inc = 1, dec, color[3]; 
// Misc-Int
int BuildTrack,BuildCount,BuildPro; int ediT,ediT2,etimer,autoEditReset,editcount; int autorunSW,cmb_counter,ramprushVar,dropVar,axe,walltakeVar,dynabuseT,confirmT,confirmTSW,ohshit,jtime,JumpVar,Trump,crouchonL2dn,PickaxeSW;
//AimAssist-Int
int angle,cos_angle,sin_angle,actual_X,actual_Y,actual_Magnitude,max_Magnitude,Radius,Angle,power,Ypower,Xpower,Power,CountPower,AxisXY,DoGzARVal,DoGzProgressionV2,DoGzARPos = 1,AR_Value;
//Sens-Int

define ProgARInvert = Off;
define ProgARHip    = Off;

define 	TurnBstTime_L = 500;// Time limit for L
define 	TurnBstTime_R = 500;// Time limit for R
int TurnBoost = Off;  
int Fasst_L   = Off;//ALWAYS OFF
int Fasst_R   = Off;//ALWAYS OFF
int Boosted_L,Boosted_R;




init { 
  color = 255; //LED RACE BY DAM WHEN KILLSW IS ACTIVE
  }
/*üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá */

//	ùêåùêÄùêàùêç ùêíùêÑùêÇùêìùêàùêéùêç 
main {
			
	 		vm_tctrl(VMControlT);  block_rumble();  dpadcorrection ();	check_jump_time ()
	 		
			displ(ActiveSensH,ActiveSensV,ActiveMZ,ActiveDZL,ActiveDZR,jtime);									


		toggleX(KillSWH,KillSWP,KillSwitch,KillSwitch[0]);


		
		if (!KillSwitch){ 


	//	ùêåùêéùêÉ ùêìùêéùêÜùêÜùêãùêÑùêí

		if(g(AssistH)      && p(AssistP) && !g(Crouch))    {  blockBtn = AssistP;     AimAssistMod  = !AimAssistMod;  ToggleName = On;  Toggle(AimAssistMod, AimAssistL[0]);   }
	
    	if(g(AntiRecH)     && p(AntiRecP))   {  blockBtn = AntiRecP;    AntiRecoilMod = !AntiRecoilMod; ToggleName = On;  Toggle(AntiRecoilMod,AntiRecoilL[0]);  }
    
   		if(g(AutoFishH)    && p(AutoFishP))  {  blockBtn = AutoFishP;   AutoFishMod   = !AutoFishMod;   ToggleName = On;  Toggle(AutoFishMod,  AutoFishL[0]);    }
	
		if(g(RapidFModH)   && p(RapidFModP)) {  blockBtn = RapidFModP;  RapidFMod     = !RapidFMod;       ToggleName = On;  Toggle(RapidFMod,      RapidFireL[0]);     } 
	
		if(g(ShootSwapH)   && p(ShootSwapP) && !g(Crouch)) {  blockBtn = ShootSwapP;	ShootSwapMod  = !ShootSwapMod;  ToggleName = On;  Toggle(ShootSwapMod, ShootSwapL[1]);   }
		
		if(g(PWeapon)      && g(Down) > 800) { blockBtn = Down; 	ProPickMod  = !ProPickMod  ToggleName = On;  Toggle(ProPickMod, ProPickL[0]);   }
		
		if(g(Reload) 	     && p(Down))		{	blockBtn = Down;		TurnBoost 	  = !TurnBoost;		set_ledx(TurnBoost + 1,3);								 }
		
		if(g(Ads) && g(Crouch))
		{
				if(event_press(Up)) 
        		{
        		DropShot = clamp(DropShot + 1,0,2);
        		vibrateA = On; combo_run(Rumble1);
        		}
        		if(event_press(Down)) 
        		{
        		DropShot = clamp(DropShot - 1,0,2);
        		vibrateB = On; combo_run(Rumble1);
        		}
		}
		
		if(g(Ads) && p(Down)){
				CrouchOnL2 = !CrouchOnL2;
		}

			//	ùêãùêÑùêÉ ùêèùêëùêéùêìùêéùêÇùêéùêã
		if(SmartTrack){
		smartTrack();
		}

		//	ùêìùêéùêîùêÇùêáùêèùêÄùêÉ ùêåùêéùêÉùêí
		
        if(VersaTouch){
		tpad_calc ();  
		
	  
					
					if(Zone1 == 2) { // combo_run(FastReset);
					if(profile_3_on || profile_2_on) {ohshit = 1;}//BuildM On
 					if(profile_5_on) {ohshit = 2;}//CombatM On
 					if(profile_1_on) {ohshit = 3;}//PickaxeM On
 					if(ohshit == 1 && ZoneTime < 250){combo_run(FirstSlotSyncCMB_B);}
 					if(ohshit == 2&& ZoneTime < 250){combo_run(FirstSlotSyncCMB);}
 					if(ohshit == 3&& ZoneTime < 250){combo_run(FirstSlotSyncCMB_P);}
					}
 					if(Zone1 == 3) { // this is already used in edit cancel 																				
 					}
 			    	if(Zone1 == 4) {
 			    		if(p(Reload))  { Trump = clamp(Trump + 1,0,1); 																	
 			    		}							
	 					if(Trump == 1) { combo_run(TrumpBuild); 
	 					}
	 					if(Trump == 2) { combo_run(TrumpWall); 
	 					}	 					
 			    	}
 			    		if(Trump == 2 && r(Reload)){combo_stop(TrumpBuild);combo_stop(TrumpWall);Trump = Off; combo_run(PressBuild);	
 			    		}
 			    	
 					if(Zone1 == 5 && ZoneTime < 200) {  blockBtn = Build;   
 					}
 					if(Zone1 == 6) {	if(profile_3_on ||profile_2_on) combo_run(RampRushStart);																								
 					}
 					
 					if(ZoneP){PickaxeSW = On;combo_run(ProPickCMB); BuildVar = 0; }
 					
 				
 					
 					
 			   	 	
 			    
 					if(Zone3 == 8) {  combo_run(FastReset);																			
 					}
 				
 					if(Zone4 == 1 && ! g(Ads) && ZoneTime < 50) { // combo_run(FastReset);												
 					}
 					if(Zone4 == 2 &&   g(Ads)) 				  {  switch_modes(0,0,0,0,1,0,5); combo_run(PumpBuild1); combo_stop(FastReset);										   
 					}
 					
 				
 				
 				
 					if(Zone5 == 1 && ZoneTime < 200)
 					{
 					
 					}

 				
 					if(Zone6 == 1 && ZoneTime < 50) {//combo_run(BTM_RightCornerEdit); 
 					
 					}
 					if(Zone6 == 4 ) 				  {  combo_run(Emote);										   
 					}
 					
 					if(Zone7 == 2) {	combo_run(FastReset);								
 					}

 					if(Zone9 == 1 && ZoneTime < 200) {
 					}
 					
 					
 			
	 						// MISC MODIF
	 				
	 					//	 			if(!PickaxeM) {	combo_run(FastShotgunP);BuildM = 0; CombatM = On;	}
 						//			  	if( PickaxeM) {	combo_run(FastShotgun );BuildM = 0; CombatM = On;	}
	 					//	}					
	 				
	 						if(confirmTSW) { confirmT = confirmT + get_rtime();
	 						}
	 				
	 						if(g(Build)||g(Edit)||g(NWeapon)||g(PWeapon)){confirmT = Off;confirmTSW = Off;
	 						}
	 						

	 		
	
		} // END VERSA 6 

		if(VersaSens)
		{
		returnAxis = isqrt(pow(abs(get_ival(RX)),2) + pow(abs(get_ival(RY)),2))
		
				if(VersaSens && profile_5_on && !OnlyEditSens)							  		
				{			
 						if(!get_val(Ads) && !get_val(Fire))                       
						{
							sens_calib(99,99,Off,CombatDZL,CombatDZR)						
						}						
						else
					
						if(get_val(Ads) && !get_val(Fire))									
						{ 
							sens_calib (98,98,Off,AimDZL,AimDZR)	
						}						
						else
						
						if(!get_val(Ads) && get_val(Fire))														
		   				{		
							sens_calib (97,97,Off,AimDZL,AimDZR)
		    			}		    		
		    			else
		    			
		    			if(get_ival(Ads) && get_ival(Fire))														
		        		{		 
							sens_calib (96,96,Off,AimDZL,AimDZR)
		        		}
		        		sensitivity(RY,ActiveMZ,ActiveSensH);		
						sensitivity(RX,ActiveMZ,ActiveSensV);
		
				}
				else				
					if(VersaSens && profile_4_on && !OnlyEditSens)		 							
					{						
							if(returnAxis >= ActiveDZL || ActiveDZR)
							{
								sens_calib (80,80,EditMZ,EditDZL,EditDZR)
							}
							sensitivity(RY,ActiveMZ,ActiveSensH);		
							sensitivity(RX,ActiveMZ,ActiveSensV);
					}
						

					if((VersaSens && profile_2_on ) || (VersaSens && profile_3_on ) )		 							
					{
						if(BuildBST)
						{
							if( returnAxis >= BuildBSTCurve)  	
							{
								sens_calib (102,102,BuildMZ,BuildDZL + BuildBST,BuildDZR + BuildBST)
							}
							else
							if( returnAxis < BuildBSTCurve)
							{
								sens_calib (102,102,BuildMZ,BuildDZL + BuildBST,BuildDZR + BuildBST)
							}
						}
						else
						if(!BuildBST)
						{
							if(returnAxis >= ActiveDZL || ActiveDZR)
							{
							sens_calib (102,102,BuildMZ,BuildDZL + BuildBST,BuildDZR + BuildBST)
							}
						}		
					sensitivity(RY,ActiveMZ,ActiveSensH);		
					sensitivity(RX,ActiveMZ,ActiveSensV);		
					}
					
				
				if(	DynamicDZ == Off && StaticDZ == Off ) 	  
				{ 
					deadzone(LX,LY,DZ,Off);	deadzone(RX,RY,DZ,Off);
					sensitivity(RY,ActiveMZ,ActiveSensH);		
					sensitivity(RX,ActiveMZ,ActiveSensV);
				}	
				else
				if( DynamicDZ == On && StaticDZ == Off )     
				{	
						deadzone(RX,RY,DZ,ActiveDZR);
						sensitivity(RY,ActiveMZ,ActiveSensH);		
						sensitivity(RX,ActiveMZ,ActiveSensV);
				}
				else
				if(	DynamicDZ == Off && StaticDZ == On )   
				{				
					if(isqrt(pow(abs(g(LX)),2) + pow(abs(g(LY)),2))<= StaticDZL ){ s(LY,Off); s(LX,Off); }
					if(isqrt(pow(abs(g(RX)),2) + pow(abs(g(RY)),2))<= StaticDZR ){ s(RY,Off); s(RX,Off); }	
					sensitivity(RY,ActiveMZ,ActiveSensH);		
					sensitivity(RX,ActiveMZ,ActiveSensV);
				}
				
				

 
		}//|üîöEND VERSASENS

		if(message_timeout){
				message_timeout -= get_rtime();
				if(message_timeout <= 0 ){    
				messageTimeout();      
				}                                                    
		}


		if(profile_5_on){
	
		}
	


		if(CustomTrig)
		{
			deadzone(Ads,Fire,60,100);
     	}
     	
     	if(AutoRun)
		{
        		if(g(Up)&&get_ptime(Up)>300)
        		{
       			autorunSW = !autorunSW;
        		}  
        				if(autorunSW == 1)
        				{
       					s(LY,-100);
       					}
       					
       					if(p(PWeapon)||p(NWeapon)||p(Edit)||p(Build))
       					//if((isqrt(pow(abs(get_ival(LX)),2) + pow(abs(get_ival(LY)),2)) >= 95))
       					{
       					autorunSW = Off;
       					}
       }
	
		if(BuilderPro) 
		{
				if(g(Switch)) 				{ combo_run(PressBuild); BuildPro = On; switch_modes(0,0,1,0,0,0,3);   }  
		
        		if(BuildPro && r(Switch)) 	{ combo_run(BuildPro);   BuildPro = Off; switch_modes(0,0,0,0,1,0,5); }        
     	}
     
    	if (PerfAcc) 
		{
    			if(profile_5_on && PerfAcc && get_ival(PerfAccH) && get_val(PerfAccP)) 
        		{
        			switch_modes(0,0,0,0,1,0,5);
    				s(PerfAccP,0);
    				s(LX,0);
    				combo_run(PerfectAccuracy);
    			} 
    			else
    				if(profile_3_on && PerfAcc && get_ival(PerfAccH) && get_val(PerfAccP)) 
        			{
        				switch_modes(0,0,0,0,1,0,5);
    					s(PerfAccP,0);
    					s(LX,0);
    					combo_run(PerfectAccuracy);
    				}
    				else 
    	 				{
	    				combo_stop(PerfectAccuracy);	
    	   				}  
    
    	}
    	

    	
		if (iPickaxe) {     
    			if(p(Pickaxe)){
					axe = On;
        		}            	
        				if(axe) {
							
        					if (event_press(Build) || event_press(Ads) || event_press(NWeapon) || event_press(PWeapon)) { 
                        		axe = Off;
            				}                    
           						if (event_release(Fire)) {
									combo_run(Pickaxe);
            					}
        				}
    	}


        
        if(EditAssist){
				if(g(EAssist) && !Zone1 ){	
					EditAssist();	
				}
				if(g(EAssist)&& Zone1 >= 1){	
					ediT = Off;	
	 			}
				if(r(EAssist)){	
				combo_run(Confirm);	 ediT = Off; ediT2 = Off;
				}
		}     //END EDIT ASSIST
		if(OneFingerReset){
				if(Zone4 == 1 && ! g(Ads) && ZoneTime < 50) { 
				combo_run(FastReset);												
 				}
		} //END ONE FINGER RESET
		if(EditCancel){
				if(Zone1 == 3) {  EditAssistCancel();																				
 				}
 		}     // END EDIT CANCEL
        
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		

		if(profile_2_on)
		{
			
				BuildCount = BuildCount + get_rtime();

					if (event_press(Pickaxe) ||  event_press(Up)  ||  BuildCount == BSynT) 
    				{
   					BuildCount = Off;combo_run(FirstSlotSyncCMB);
    				} 
    		
					if (get_ival(Roof) || get_ival(Floor) || get_ival(Ramp) || get_ival(Wall)) 
    				BuildCount = Off;
    			
		}// üîöEND BUILDMODE
		
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		
       
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		

		if(profile_3_on)
		{
				if(BuildVar >= 1)
				{
				BuildCount = BuildCount + get_rtime();

					if (event_press(Pickaxe) ||  event_press(Up)  ||  BuildCount == BSynT) 
    				{
   					BuildCount = Off;combo_run(FirstSlotSyncCMB);
    				} 
    		
					if (get_ival(Roof) || get_ival(Floor) || get_ival(Ramp) || get_ival(Wall)) 
    				BuildCount = Off;
    			}
		}// üîöEND BUILDMODE
		
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		

		if(profile_1_on)
		{
				if(g(Fire) && p(Ads))
				{
				s(Ads,0);axe = Off;
				walltakeT = 1;
				}
						if(walltakeT && r(Fire))
						{
						s(Fire,0);
						combo_run(walltakeT);
						}
						if(walltakeT == 1){axe = Off;}
		}// üîöEND PICKaxeMODE
		
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		

		if(profile_5_on)
		{
		ramprushVar = 0; // THIS HITS BUILD AND SETS BASE FOR RAMP RUSH IF NOT IN BUILD MODE

		if(!AimAssistMod)
		{
		   if (AimAssist_EXP) {   
         
           if (get_val(Ads)> 95){ 
               combo_run(AimExpo);
           }
        
               if (abs(get_val(9)) > 19 || abs(get_val(10)) > 19) 
                   combo_stop(AimExpo);
      	}

        
     	if (AimAssist_LIN) {
	 
	    if (event_press(Ads)) { 
	    	
	    	Power = On;
}
	    
	    else if (!get_ival(Ads) && event_press(Fire)) {
	    	
	    	Power = On;
}
	    
	    if (get_ival(Ads) || get_ival(Fire)) {
	    	
	    	AxisXY = isqrt(abs(get_ival(aimX)) * abs(get_ival(aimX)) + abs(get_ival(aimY)) * abs(get_ival(aimY)));
	    	
	    	if (AssistProfile == 1)
	    		
	    		AimAssist(LINAssistStr,AimAssistInc);
	    		
         } else {
	    	
	    	CountPower = 0;
	    	power = Off;
        }
}
		}
		
		if (!AntiRecoilMod) 
    	{ 
				if (AntiRecoil)
				{        
                    AR_Value = AntiRecT;  

                	if(get_ival(Ads) && get_ival(Fire)) 
                 
                    LegacyAR ()
            
        		}
        		
        		if (ProgressionAR){        

                if (((ProgARHip) && get_ival(Fire)) || ((!ProgARHip) && get_ival(Ads) && get_ival(Fire))) {
                    DoGzProgressionV2 = On;
                    DoGzProgressionV2();
                }

                    if (event_release(Ads) || event_release(Fire)) {
                        DoGzARVal = ArProgStart;
                        DoGzProgressionV2 = Off;
                        DoGzARPos = On;
                    }

            }

            if ((get_ival(RecoilOTF)) && ((ProgressionAR))) { 

                if (event_press(RecoilDnP)) {
                    if (ProgressionAR) 
                        ArProgFinish += 1;

                    combo_run(Rumble);
                }

                if (event_press(RecoilUpP)) {
                    if (ProgressionAR) 
                        ArProgFinish -= 1;

                    combo_run(Rumble);
                            }

                    if ((ProgressionAR) && (ArProgFinish < ArProgStart + 5 || ArProgFinish > 98)) {
                        DoGzARVal = ArProgStart;
                        DoGzProgressionV2 = Off;
                        DoGzARPos = On;
                        ArProgFinish = ArProgStart + 12;
                     }    

                set_val(RecoilUpP,0); set_val(RecoilDnP,0);
            }
        }
		
		if(RapidFMod) { 
     			if(g(Fire)) {
     			combo_run(RapidFire);	   
				}
     			else{
     			combo_stop(RapidFire);	
     			}
    	}
    	
    	if(PumpBuild)
		{
			if(g(PumpBuildH) && p(PumpBuildP))
			{
				blockBtn = PumpBuildP;
				combo_run(PumpBuild1);		
			}		
		} // üîö END PUMPBUILD

   		if(DropShot == 1)
    	{
    	
				//if (DropShot && p(Fire) && get_brtime(Fire) < dropDbltap) 
				if (DropShot && g(Fire) && p(Crouch)) 
				{
				dropVar = 1;
				}
					if(dropVar)
					{
    				combo_run(DropShot);
    				if(event_release(Fire))
    				dropVar = 0;
    				}
    			
    	}
    	
    	if(DropShot == 2)
    	{
    	
    	 		if (DropShot && g(Fire) && abs(g(LX)) <= 35 && abs(g(LY)) <= 35)
        		{
           			combo_run(SmartShot);
            		combo_run(DropShot);
        		}    
            	else 
            		{
               			combo_stop(SmartShot);
                		combo_stop(DropShot);
            		}

    	}
    	

    	
    	if(CrouchOnL2){
    	
				if(p(Ads)&& !jtime)
				{
						combo_run(CrouchOnL2CMB);
						crouchonL2dn = On;
				}		
				if(r(Ads)&& crouchonL2dn)
				{
						combo_run(CrouchOnL2CMB);
						crouchonL2dn = Off;
				}
		}
		
		


        if (!ShootSwapMod) 
    	{ 
        if(BattsShootSwap)
      	{
      	//set_val(TRACE_1,BattsShootSwapVar);
				if(g(PWeapon))	
				{	
				BattsShootSwapVar = Off;	
				} 
        				if(r(Fire)&& get_ptime(Fire) < 1150 && confirmT < 50) 
        				{		
        				BattsShootSwapVar = !BattsShootSwapVar; 
            
            					if(!BattsShootSwapVar)	
            					{	
            					combo_run(BattsLBSwap);            				
            					}
            					else	
            						{	
            						combo_run(BattsRBSwap);            					
            						}
        				}
       } // üîöEND BATTS SHOOTSWAP
		
    	if(DAMsPumpSmg) 	
		{     
			if  (DAMsPumpSmg && get_ival(Reload)) 
			{	
    			Trigger = 1; 
    		}
    
					if(Trigger == 1)
					{	
					combo_run(BlinkVib);
					
						if(get_val(NWeapon) || get_val(PWeapon) ||get_val(Reload))
						BumperTog = 0;
				
	   					do 
	   					{ rtime[DaM] = (rtime[DaM] + get_rtime()) * !(event_release(DaM));
       					if (rtime[DaM] < 0) rtime[DaM] = 32767;
     					} 
     					while(DaM = (DaM + 1) % 21);
 					
  						if(event_release(Fire)&& !get_val(Crouch)) triggerRelease = BumperTog++;
 
  						if (triggerRelease) {
    					if (BumperTog & 1) {
      					set_val(NWeapon, (!check_rel(Fire, BumperReleaseT) * 100));
      					if (!get_val(NWeapon)) triggerRelease = 0;
    					} else {
      					set_val(PWeapon, (!check_rel(Fire, BumperReleaseT) * 100));
      					if (!get_val(PWeapon)) triggerRelease = 0;
    					}
  						}		
  					}
  			
  					if( get_ival(Edit) || p(Build) ||  get_ival(F2))
					{
    	 			Trigger = Off;
    	 			if(Trigger = 0)
    	 			combo_stop(BlinkVib);
					}
  					
     		
		}	// üîöEND DAMS PUMPSWAP
		}   // üîöEND SHOOTSWAPMOD
		

		if(AutoFishMod){
				if((AutoFish && !g(Fire) && get_rumble(RUMBLE_A) == 12) && (get_rumble(RUMBLE_B) == 12) &&(get_rumble(RUMBLE_LT) == 12) && (get_rumble(RUMBLE_RT) == 12)){
				combo_run(AutoFishCMB);
				}
		}				

 }// üîöEND COMBATMODE
 
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		

}	// üîöEND KILLSW OFF

		
		if(KillSwitch){
		combo_run(rgb);
		}

		if (blockBtn) 
		{
				if (r(blockBtn)) 
    			{
    			blockBtn = Off;
    			}
   				else 
        			{
        			s(blockBtn,Off);
        			}
		}

		
		Last_Rx = Actual_Rx;
		Last_Ry = Actual_Ry;
		
		
//	ùêåùêÑùêçùêî ùêíùêÑùêÇùêìùêàùêéùêç

		if(!MainMenu && !g(Share) && g(Opt))//Menu Toggle
		{
			if(get_ptime(Opt) >= 500)
			{
			menuVar = menuVar + 1;
			}
			if(menuVar == 1)
			{
			MenuToggle(On,On,On,On,Off);
			}
			
			if(g(Opt) && get_brtime(Opt) < 600)//Double Click Options for in game menu
			s(Opt,100);			
			else
				s(Opt,0);				
		}
		
		if(MainMenu) 
		{
        	Scroll();
        	combo_stop(Boot);
        	MenuTimeout += get_rtime();

				if (get_ival(Up) || get_ival(Down) || get_ival(Left) || get_ival(Right) || event_press(MenuExitP)|| event_press(MenuExitP)) 
				{
					MenuTimeout = Off;
				}

				if (MenuTimeout >= TimeoutLimitM || event_press(MenuExitP)) {

				MenuToggle(Off,Off,Off,Off,Off);
				vibrateB = On;menuVar = 0;
				combo_run(Rumble1);
			}

				if (event_press(ChangeMenuP)) 
				{
					MenuValues = !MenuValues;
					MenuSW = !MenuSW;
					ModIndex = On;
					Update = On;
				}


				if (MenuValues) 
				{
					ModDigit[ModIndex] = PrintMod(	ModDigit[ModIndex],	ModDigitMin[ModIndex],	ModDigitMax[ModIndex],	ModIncrement[ModIndex],	IndexMinValues,	IndexMaxValues,	ModValue[ModIndex]);
				}

				if (MenuSW) 
				{
					ModSW[ModIndex] = PrintMod(	ModSW[ModIndex],	Off,	On,	1,	IndexMinSWes,	IndexMaxSWes,	ModToggle[ModIndex]);
				}
						BlockButton(Down); BlockButton(Up); BlockButton(Left); BlockButton(Right); BlockButton(ChangeMenuP); BlockButton(MenuExitP);
		}

    	if (!MainMenu && get_ival(FindSlotH) && event_press(FindSlotP)) 
    	{
        		Slot = On;
        		combo_run(Boot);
    	}

    	if (ToggleTime) 
    	{
        		TimeToggle();
    	}


}//	‚å´ Ôº•ÔºÆÔº§ ÔºØÔº¶ Ôº≠Ôº°Ôº©ÔºÆ

/*üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá */

 //	ùêÇùêéùêåùêÅùêéùêí
 

combo AimExpo{          
     
     set_val(10, (EXPOAssistStr)); wait(10)
     set_val(9, (EXPOAssistStr)); wait(10)
     set_val(10, EXPOAssistStr * -1); wait(10)
     set_val(9, EXPOAssistStr * -1); wait(10)
}

combo AutoFishCMB {
	wait(BTNUpdate);
	s(Fire,100);
	wait(BTNUpdate);
}

combo AutoRunCMB {
	s(LY,-100);
	led(LOff);
	wait(10000);
	autorunSW = 2;
}

combo BattsRBSwap {
	wait(BattsSwapT);
    s(NWeapon,100);
    wait(BattsSwapT);
}

combo BattsLBSwap {
    wait(BattsSwapT);
    s(PWeapon,100);
    wait(BattsSwapT);
}

combo AutoEditResetCMB {

	wait(AutoEResT);
    s(Edit,100);
    wait(50);
    s(Reset,100);        
    wait(50);
    combo_run(Confirm);
    etimer = 0;
    autoEditReset = 0;
    //editcount = Off;
     
}

combo BlinkVib {
	reset_leds();
	led(DarkPurp);
	set_rumble(RUMBLE_B,1);
    wait(50);
    led(DarkOrange);
    set_rumble(RUMBLE_B,0);
    wait(400);
    
}

combo Boot {        
	wait(Slot);
	if (Slot == 20000)    
        cls_oled(0);
        
        if (Slot) {
            cls_oled(0);
            printf(5,10,0,1,MiscString[3]);
            printf(5,25,0,1,MiscString[4]);
            printf(18,45,0,1,MiscString[5]);
            NumX = 32; NumY = 15; NumS = 0;
            FindDigit(get_slot(),DigitValue(get_slot()));
            Slot = Off;
        }    
        
        wait(20000);
        cls_oled(0);
        Clear = On;
}

combo BuildPro {      
    s(Switch,0);
    wait(50);      
    s(Switch,100);
    wait(50);
}

combo Confirm {
    s(Confirm,100);
    wait(BTNUpdate);
    s(Confirm,0);
    wait(BTNUpdate - get_rtime());
    
    ediT = Off;
    confirmTSW = On;
}

combo CrouchOnL2CMB {
	wait(crouchshotT);
 	set_val(Crouch,100);
    wait(50);
    set_val(Crouch,0);
}
combo DropShot {
	s(Crouch,100);   
	wait( random( 40, 100 ) );
	s(Crouch,0);
    wait(random(40, 80 - get_rtime()));
 }

combo DynAbuseCMB {
    s(Ads,100);
    wait(dynabuseT);
    s(Ads,0);
    wait(DynamicAAWait);
}

combo EditCancel {
	s(Select,0);
	wait(40);	
	wait(4000);
}

combo Emote {
	s(Left,100);
	s(RY,100);
	wait(200);
	s(Left,0);
	s(RY,0);
	wait(1500);
	s(Fire,100);
	wait(100);
	s(Fire,0);
	wait(100);

	
}

combo FastEdit {
	set_val(EAssist,100);
    wait(BTNUpdate);
    set_val(EAssist,0);
    wait(BTNUpdate - get_rtime());    
    set_val(Select,100);        
    wait(BTNUpdate);
    set_val(Select,0);
    wait(BTNUpdate - get_rtime());    
    set_val(Confirm,100); 
    wait(BTNUpdate);
    set_val(Confirm,0);
    wait(BTNUpdate - get_rtime());
   
}

combo FasstL {
	set_val(LX,(inv(get_ival(RX))));
	wait(2000);
}

combo FasstR {
	set_val(LX,(get_ival(RX)));
	wait(2000);
}

combo FastReset {
    set_val(EAssist,100);
    wait(BTNUpdate);
    set_val(Reset,100);        
    wait(BTNUpdate);
    set_val(Reset,0); 
    wait(BTNUpdate - get_rtime());
    set_val(Confirm,100);
    wait(BTNUpdate);
    set_val(Confirm,0);
    wait(BTNUpdate - get_rtime());
    wait(100);
   
}

combo FirstSlotSyncCMB {
	s(Pickaxe,100);
	wait(50);	
	s(Build,100);
	wait(50);
	s(Pickaxe,100);
	wait(50);
	s(NWeapon,100);
	wait(50);
	ohshit = 0;
	
}
combo FirstSlotSyncCMB_P {
	s(Build,100);
	wait(50);
	s(Pickaxe,100);
	wait(50);	
	s(NWeapon,100);
	wait(50);
	ohshit = 0;
	switch_modes(0,0,0,0,1,0,5);	
}
combo FirstSlotSyncCMB_B {

	s(Pickaxe,100);
	wait(50);	
	wait(50);
	led(MediumBlue);
	ohshit = 0;
	switch_modes(0,0,0,0,1,0,5);
}

combo PerfectAccuracy {
    set_val(Fire,100);
	wait(100);   
	wait(PerfAccTime);
    set_val(Fire,100);
} 

combo Pickaxe {   
    set_val(Pickaxe,100);
    wait(30);
    set_val(Pickaxe,0);
    wait(30);
    axe = Off;    
}

combo ProPickCMB {

    wait(30);
    set_val(Pickaxe,100);
    wait(PickaxePresT + LagOffset);
    set_val(Pickaxe,0);
    wait(PickaxeRelT + LagOffset);
    set_val(Pickaxe,100);
    wait(PickaxePresT + LagOffset);
    set_val(Pickaxe,0);
    wait(PickaxeRelT + LagOffset);
    set_val(Pickaxe,100);
    wait(PickaxePresT + LagOffset);
    set_val(Pickaxe,0);
    wait(PickaxeRelT + LagOffset);
    if(iPickaxe){axe = Off;}
    PickaxeSW = Off;
    switch_modes(1,0,0,0,0,0,1);	
}

combo PressBuild {
    s(Build,100);
	wait(BTNUpdate);
	s(Build,0);
	wait(BTNUpdate-get_rtime());

}

combo PumpBuild1 {	
	s(Fire,100);
	wait(40);
 	s(Jump,100);
 	s(Build,100);
	wait(100);
	set_val(Build,0);
	wait(BTNUpdate - get_rtime());
	
	autoEditReset = 0;
}

combo RampRushStart { 	
	s(Jump,100);
	s(LY,-100);
	wait(100);
	s(Floor,100);
	s(Ramp,100);
    wait(100 + 200);
    s(Wall,100);
    wait(40);
    BuildCount = Off;
    ramprushVar++;    
}

combo RampRush { 
	s(Jump,100);
	s(LY,-100);
	wait(100);
	s(Floor,100);
	s(Ramp,100);
    wait(100);
    s(Wall,100);
    wait(40);
    BuildCount = Off;
    ramprushVar++; 
}

combo RapidFire {
    set_val(Fire,100);
    wait(10);
    set_val(Fire,0);
    wait(10);
}

combo rgb {
    wait(10);
    set_rgb(color,color[1],color[2]);
    color[dec] -= 3; color[inc] += 3;
   if (!color[dec]) { 
    inc = (inc + 1) % 3; 
    vm_tctrl(inc - 9 % 99); 
    dec = (dec + 1) % 3; 
    vm_tctrl(inc - 9 % 99); 
   }
}

combo Rumble {    
    if (event_press(RecoilUpP))
        set_rumble(RUMBLE_A,35);
        
        else if (event_press(RecoilDnP))
            set_rumble(RUMBLE_B,70);
    
    wait(250);
    reset_rumble();
}

combo Rumble1 {    
    if (vibrateA)        
        set_rumble(RUMBLE_A,15);
        
        else if (vibrateB)            
            set_rumble(RUMBLE_B,15);
    
    	wait(250);
    	vibrateA = Off;
    	vibrateB = Off;
    	reset_rumble();
}

combo Rumble3 {    
	set_rumble(RUMBLE_B,5);
	wait(30);
    set_rumble(RUMBLE_B,0);
    wait(400);
}

combo SmartShot {

    set_val(LX,-100 + get_ival(LX));
    wait(170);
    set_val(LX,100 - get_ival(LX));
    wait(170);
}


combo TrumpBuild {
	cmb_counter = 0;
	s(Build,100);
	wait(BTNUpdate);
	s(Build,0);
	wait(BTNUpdate-get_rtime());
	Trump = 2;
}

combo TrumpWall {
	s(Wall,100);
	wait(20 + get_rtime());
	s(Wall,0);
	wait(20 - get_rtime());
    if (Trump == 2) {
        combo_restart(TrumpWall);combo_stop(TrumpBuild);
    }
}

combo WallHold {        
    s(Build,100);
    wait(40);
    s(Wall,100);
    wait(WT_A);
    s(Build,0);
    s(Wall,0);
    wait(30);
    s(Build,100);
    wait(30);
    s(Build,0);
    s(N_Weapon,100);
    wait(WT_B);
    walltakeT = 0;
    PickaxeMode = Off;
    CombatMode = On;
}

combo walltakeT {       
    s(Build,100);
    wait(40);
    s(Wall,100);
    wait(200);
    s(Build,0);
    s(Wall,0);
    wait(30);
    s(Build,100);
    wait(30);
    s(Build,0);
    s(NWeapon,100);
    wait(walltakeT2);
    walltakeT = 0;
   switch_modes(0,0,0,0,1,0,5);	
}

combo VibrateBlink {
    
    if (Modled) 
    { 
        set_rgb(0,255,0);
        set_rumble(RUMBLE_A,15);
    }    
    else 
    	{ 
            set_rgb(255,0,0);
            set_rumble(RUMBLE_B,15);
        }   	
     	wait(150);
    	set_rgb(0,0,0);
    	wait(150);
    	reset_rumble();    
    
    if (Modled)        
        set_rgb(0,255,0);    
        else           
            set_rgb(255,0,0);
	
		wait(150);
		reset_leds();
}

combo wait {
	wait(40);
}

 //	ùêÖùêîùêçùêÇùêìùêàùêéùêçùêí
 
function EditAssist () {

    ediT = ediT+get_rtime();

	if(get_ival(EAssist) && Zone1 == 0)
    {
    		if (ediT >= EditDelay)
            Press(Select);
    }    
}     

function EditAssistCancel () {
    ediT2 = ediT2 + get_rtime();

    		if (ediT2 >= EditDelay2)
            Press(Select);       
} 

function Press (Button) {
    if (get_ival(Button))
        return;
            set_val(Button, 100);
}

int double__tap;
function double_click(button) {        
	if (double__tap[button] >= 0) {                    
		double__tap[button] += get_rtime(); 
		if (double__tap[button] > 450)
		double__tap[button] = -1;                                                                                       
	}           
	if (event_release(button) && get_ptime(button) <= 200) { 
		if (double__tap[button] < 0) {                    
			double__tap[button] = 0;                        
		} else {             
			double__tap[button] = -1;                       
			return 1;                                   
		}                                                     
	}                                                  
	return 0;
}

function DZCalc(Stick, Val, Shape) { // CREDITS TO DAM FOR THIS DEADZONE CALC

  Stick += 7;
  
  	if (Shape == DZ_CIRCLE) 
  	{
  		if(isqrt(pow(get_ival(Stick), 2) + pow(get_ival(Stick + 1), 2)) <= Val) 
  		{
      	set_val(Stick, 0);
      	set_val(Stick + 1, 0);
    	}
 	}
	else  
  		{
    	if (abs(get_ival(Stick)) < Val)
    	set_val(Stick, 0);
    	if (abs(get_ival(Stick + 1)) < Val)
    	set_val(Stick + 1, 0);
  		}
  		
  		DZCheck = Val;
}

function BlockButton (Button) { 

	if (!get_ival(Button))
		return; 
		set_val(Button,Off);
}

function dpadcorrection () {
// PS5 DPAD CORRECTION
	if(g(Left)) { s(Right,0);	s(Up,0);	s(Down,0) ;}
	if(g(Right)){ s(Left,0);	s(Up,0);	s(Down,0) ;}	
	if(g(Up))   { s(Left,0);	s(Right,0);	s(Down,0) ;}	
	if(g(Down)) { s(Left,0);	s(Up,0);	s(Right,0);}
}

int cur_rumble;

function RumbleToUse(){
	if(get_rumble(RumbA) == get_rumble(RumbB))
	{
		cur_rumble = get_rumble(RumbA);
	}
	if(get_rumble(RumbA) > get_rumble(RumbB))
	{
		cur_rumble = get_rumble(RumbA);
	}
	if(get_rumble(RumbA) < get_rumble(RumbB))
	{
		cur_rumble = get_rumble(RumbB);
	}
}

function DamsRumbleToUse(){

    if(get_rumble(RumbA) >= get_rumble(RumbB)) 
        return RumbA;
    return RumbB;
}

/*‚îå‚îÄ‚îÄ AIM ASSIST ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚ñº ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/
int AssistProfile = 1; 
function AimAssist (LINAssistStr,Step) {

	if (Power) {
		
		Ypower = LINAssistStr;
		Xpower = LINAssistStr * -1;
		AimAssistInc = Step;
		Power = Off;
	}
	
	if (!power) {
	
		Xpower += AimAssistInc;
		Ypower -= AimAssistInc;
	
	} else {
		
		Xpower -= AimAssistInc;
		Ypower += AimAssistInc;
	}
	
	CountPower ++;
	
	if (CountPower >= (LINAssistStr / AimAssistInc)) {
		
		power = !power;
		CountPower = 0;
	}	
	
	if (AxisXY > 8) {//put DZ here
	
		if (Reducer) {
		
			set_Val(aimY,(Ypower - LINAssistStr / 2));
			set_Val(aimX,(Xpower - LINAssistStr / 2 * -1));
		
		} else {
		
			set_val(aimY,(Ypower - LINAssistStr / 2) + get_ival(aimY));
			set_val(aimX,(Xpower - LINAssistStr / 2 * -1) + get_ival(aimX));	
		}
		
	} else {
		
		if (Reducer) {
				
			set_Val(aimY,(Ypower - LINAssistStr / 2));
			set_Val(aimX,(Xpower - LINAssistStr / 2 * -1));
			
		} else {
			
			set_val(aimY,(Ypower - LINAssistStr / 2));
			set_val(aimX,(Xpower - LINAssistStr / 2 * -1));
		}
	}
}
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/

function set_Val(Input,Output) {

	set_val(Input,clamp(Output * (100 - abs(get_ival(Input))) / 100 + get_ival(Input),-100,100));
        return; 
}

function LegacyAR () {

	Set_Val(RY,AR_Value);       
}

function DoGzProgressionV2() {
    
    if (DoGzProgressionV2) {
        if (DoGzARPos) {
            DoGzARVal += 1;
        }
            else {
                DoGzARVal -= 1;
            }

        if (DoGzARPos && DoGzARVal == ArProgFinish) 
            DoGzARPos = Off;

            if (!DoGzARPos && DoGzARVal == ArProgStart)
                DoGzARPos = On;

                    if(ProgARInvert) {
                        Set_Val(RY,DoGzARVal * -1);
                    }
                        else {
                            Set_Val(RY,DoGzARVal);
                        }
    }
}

function Set_Val(Input,Output) {

      set_val(Input,clamp(Output * (100 - abs(get_ival(Input))) / 100 + get_ival(Input),-100,100));
        return; 
}
 
/*	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	*/
function check_rel(DaMo, time) { return time_release(DaMo) >= time && !get_val(DaMo); }	

function time_release(DaMo) { return rtime[DaMo]; }	
/*	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	‚ò©	*/

function PolarFlow(PFB,PSV,PFV,PV,PF,PID) {
    	if(PF) {
       		PFB += PV;
    	if(PFB <= PFV)  
    	return PFB;
    	if(PFB > PFV) {
        	PVID[PID] = 0;
    	return PFB - PV;}
}
		else{
        	PFB -= PV;    
    	if(PFB >= PSV)  
    	return PFB;
    	if(PFB < PSV) {
    		PVID[PID] = 1; 
        return PFB + PV;}
} 
   		return FALSE;    
} 

function Stop_Input() { 

	s(Jump,0);     s(Crouch,0);  
	s(PWeapon,0);  s(NWeapon,0);  
	s(Reload,0);   s(Edit,0);
	
	s(PS4_SHARE,0);s(PS4_OPTIONS,0);
	s(PS4_LEFT,0); s(PS4_TRIANGLE,0); 
	s(PS4_CROSS,0);s(PS4_CIRCLE,0); 
	s(PS4_UP,0);   s(PS4_SQUARE,0);  
	s(PS4_DOWN,0); s(PS4_RIGHT,0);
}
    
    
    
int Zone1,Zone2,Zone3,Zone4,Zone5,Zone6,Zone7,Zone8,Zone9,ZoneP,Zone,ZoneTime,ZoneT;

function tpad_calc() {

if(ps4_touchpad(P1) && ! ps4_touchpad(P2)) 
{	ZoneTime += get_rtime();
   // ZONE ONE
   if(g(F1X) < -66  &&  g(F1X) > -100 && g(F1Y) < -10  &&  g(F1Y) > -110 && ! g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump) && ! g(NWeapon))  { Zone1 = clamp(Zone1 + 1,0,1) ;}
   else
   if(g(F1X) < -66  &&  g(F1X) > -100 && g(F1Y) < -10  &&  g(F1Y) > -110 &&   g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump) && ! g(NWeapon))  { Zone1 = clamp(Zone1 + 2,0,2) ;}
   else
   if(g(F1X) < -66  &&  g(F1X) > -100 && g(F1Y) < -10  &&  g(F1Y) > -110 && ! g(TPAD) &&   g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump) && ! g(NWeapon))  { Zone1 = clamp(Zone1 + 3,0,3) ;}
   else
   if(g(F1X) < -66  &&  g(F1X) > -100 && g(F1Y) < -10  &&  g(F1Y) > -110 && ! g(TPAD) && ! g(Edit) &&   g(Reload) && ! g(Build) && ! g(Jump) && ! g(NWeapon))  { Zone1 = clamp(Zone1 + 4,0,4) ;}
   else
   if(g(F1X) < -66  &&  g(F1X) > -100 && g(F1Y) < -10  &&  g(F1Y) > -110 && ! g(TPAD) && ! g(Edit) && ! g(Reload) &&   g(Build) && ! g(Jump) && ! g(NWeapon))  { Zone1 = clamp(Zone1 + 5,0,5) ;}
   else
   if(g(F1X) < -66  &&  g(F1X) > -100 && g(F1Y) < -10  &&  g(F1Y) > -110 && ! g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) &&   g(Jump) && ! g(NWeapon))  { Zone1 = clamp(Zone1 + 6,0,6) ;}
   else
   if(g(F1X) < -66  &&  g(F1X) > -100 && g(F1Y) < -10  &&  g(F1Y) > -110 && ! g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump) &&   g(NWeapon))  { ZoneP = clamp(Zone1 + 1,0,1) ;}
   else
   // ZONE TWO
   if(g(F1X) < -10  &&  g(F1X) >  -65 && g(F1Y) < -10  &&  g(F1Y) > -110 )  { Zone2 = clamp(Zone2 + 1,0,1) ;}
   else
   if(g(F1X) < -10  &&  g(F1X) >  -65 && g(F1Y) < -10  &&  g(F1Y) > -110 &&   g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) &&   g(Jump))  { Zone2 = clamp(Zone2 + 2,0,1) ;}
   else
   // ZONE THREE
   if(g(F1X) >  10  &&  g(F1X) <   50 && g(F1Y) < -10  &&  g(F1Y) > -110 )  { Zone3 = clamp(Zone3 + 1,0,1) ;}
   else
   if(g(F1X) >  10  &&  g(F1X) <   50 && g(F1Y) < -10  &&  g(F1Y) > -110 &&   g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) &&   g(Jump))  { Zone3 = clamp(Zone3 + 2,0,1) ;}
   else
   // ZONE FOUR
   if(g(F1X) >  10  &&  g(F1X) <  100 && g(F1Y) < -10  &&  g(F1Y) > -110 && ! g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump))  { Zone4 = clamp(Zone4 + 1,0,1) ;}
   else
   if(g(F1X) >  10  &&  g(F1X) <  100 && g(F1Y) < -10  &&  g(F1Y) > -110 &&   g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump))  { Zone4 = clamp(Zone4 + 2,0,2) ;}
   else
   // ZONE FIVE
   if(g(F1X) < -20  &&  g(F1X) > -100 && g(F1Y) > -10  &&  g(F1Y) <  130 && ! g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump))  { Zone5 = clamp(Zone5 + 1,0,1) ;}
   else
   if(g(F1X) < -20  &&  g(F1X) > -100 && g(F1Y) > -10  &&  g(F1Y) <  130 &&   g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump))  { Zone5 = clamp(Zone5 + 2,0,2) ;}
   else
   if(g(F1X) < -20  &&  g(F1X) > -100 && g(F1Y) > -10  &&  g(F1Y) <  130 && ! g(TPAD) &&   g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump))  { Zone5 = clamp(Zone5 + 3,0,3) ;}
   else
   if(g(F1X) < -20  &&  g(F1X) > -100 && g(F1Y) > -10  &&  g(F1Y) <  130 && ! g(TPAD) && ! g(Edit) &&   g(Reload) && ! g(Build) && ! g(Jump))  { Zone5 = clamp(Zone5 + 4,0,4) ;}
   else
   if(g(F1X) < -20  &&  g(F1X) > -100 && g(F1Y) > -10  &&  g(F1Y) <  130 && ! g(TPAD) && ! g(Edit) && ! g(Reload) &&   g(Build) && ! g(Jump))  { Zone5 = clamp(Zone5 + 5,0,5) ;}
   else
   if(g(F1X) < -20  &&  g(F1X) > -100 && g(F1Y) > -10  &&  g(F1Y) <  130 && ! g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) &&   g(Jump))  { Zone5 = clamp(Zone5 + 6,0,6) ;}
   else
   // ZONE SIX
   if(g(F1X) >  20  &&  g(F1X) <  100 && g(F1Y) > -10  &&  g(F1Y) <  130 && ! g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump))  { Zone6 = clamp(Zone6 + 1,0,1) ;}
   else
   if(g(F1X) >  20  &&  g(F1X) <  100 && g(F1Y) > -10  &&  g(F1Y) <  130 &&   g(TPAD) && ! g(Edit) && ! g(Reload) && ! g(Build) && ! g(Jump))  { Zone6 = clamp(Zone6 + 2,0,2) ;}
}
else
    if(ps4_touchpad(P1) && ps4_touchpad(P2))
    {	ZoneTime += get_rtime();
          if(ps4_touchpad(P1X) <  100  &&  ps4_touchpad(P1X) > -100  && ps4_touchpad(P2Y) <  20  &&  ps4_touchpad(P2Y) > -100)                     { Zone7 = clamp(Zone7 + 2,0,2) ;}
          else
          if(ps4_touchpad(P1X) < -60   &&  ps4_touchpad(P1X) > -100  && ps4_touchpad(P2Y) < -50  &&  ps4_touchpad(P2Y) > -100)                     { Zone8 = clamp(Zone8 + 1,0,1) ;}
          else
           if(ps4_touchpad(P1X) > -100  &&  ps4_touchpad(P2Y) >   50  && ps4_touchpad(P2Y) < 100)                     { Zone9 = clamp(Zone9 + 1,0,1) ;}
    }
    else
    if(! ps4_touchpad(P1) && ! ps4_touchpad(P2)) 
    { 
        Zone1= Off;Zone2= Off;Zone3= Off;Zone4= Off;Zone5= Off;Zone6= Off;Zone7= Off;Zone8= Off;Zone9= Off; ZoneP = Off; ZoneTime = Off;    
    }
}

function checkJumpTime (){                   
	combo_stop(CrouchOnL2CMB);           
} 
	
        const string TRACK[]  ={"PICKAXE ","BUILD+P ","BUILD","EDIT","COMBAT","MENU/RESYNC","MAP/RESYNC","INV/RESYN",   ""};
        const string SUBMENU[]  ={"","ALL MODES OFF",   ""};
        
const string QT_ON     = "ON";
const string QT_OFF    = "ALL MODES OFF";
                                                                              
function display_Add_QT(togg_number){  
                                                                     
    cls_oled(0);                  
    if( togg_number == 1){
    	  printf(center_x1(get_track_chars(0), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[0]);
    		    printf( 53 ,30 , OLED_FONT_LARGE , OLED_WHITE , QT_ON[0] );
    } 
    if( togg_number == 2){                                             
    	  printf(center_x1(get_track_chars(1), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[1]);                        
    		    printf( 53 ,30 , OLED_FONT_LARGE , OLED_WHITE , QT_ON[0] );  
    }
    if( togg_number == 3){                                              
    	  printf(center_x1(get_track_chars(2), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[2]);                        
    		    printf( 53 ,30 , OLED_FONT_LARGE , OLED_WHITE , QT_ON[0] );  
    }                       
    if( togg_number == 4){                                            
    	  printf(center_x1(get_track_chars(3), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[3]);                        
    		    printf( 53 ,30 , OLED_FONT_LARGE , OLED_WHITE , QT_ON[0] );
    		    
    } 
    if( togg_number == 5){                                             
    	  printf(center_x1(get_track_chars(4), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[4]);  
    	  
    			printf( 47 ,30 , OLED_FONT_LARGE , OLED_WHITE , QT_ON[0] );
    }            
    if( togg_number == 6){                                             
    	  printf(center_x1(get_track_chars(5), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[5]);      	  
    	  printf( 10 ,30 , OLED_FONT_MEDIUM , OLED_WHITE ,QT_OFF[0] );
    }      
    if( togg_number == 7){                                             
    	  printf(center_x1(get_track_chars(6), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[6]); 
    	  
		  printf( 10 ,30 , OLED_FONT_MEDIUM , OLED_WHITE ,QT_OFF[0] );
    }
    if( togg_number == 8){                                             
    	  printf(center_x1(get_track_chars(7), OLED_FONT_MEDIUM_WIDTH),10, OLED_FONT_MEDIUM,OLED_WHITE,TRACK[7]);
    	  
    	  printf( 10 ,30 , OLED_FONT_MEDIUM , OLED_WHITE ,QT_OFF[0] );
    }

 	   message_timeout = 3000;  
  }                   
function switch_modes (prf1, prf2, prf3, prf4, prf5, prf6, qt_message){
   // if(qt_message == 6 )modetracking = FALSE;  
   // else modetracking = TRUE; 
    profile_1_on = prf1; // turn Profile 1 ON / OFF    
    profile_2_on = prf2; // turn Profile 2 ON / OFF    
    profile_3_on = prf3; // turn Profile 3 ON / OFF  
    profile_4_on = prf4; // turn Profile 3 ON / OFF
    profile_5_on = prf5; // turn Profile 3 ON / OFF
    MenuReSync = prf6; // turn Profile 3 ON / OFF
    display_Add_QT ( qt_message );    
}
function center_x(f_chars,f_font) {                                                             
    return (OLED_WIDTH / 2) - ((f_chars * f_font) / 2); 
}
function center_x1(f_chars,f_font) {
     return (OLED_WIDTH / 2) - ((f_chars * f_font) / 2);
    }  
    
function get_track_chars(f_idx){ // This is the string list for "MODES" \\ 
		if (TRACK[f_idx + 1] != -1) 
            return TRACK[f_idx + 1] - TRACK[f_idx] - 1;
        return sizeof(TRACK) - TRACK[f_idx];        
}
function get_submenu_chars(f_idx){ // This is the string list for "SUB MENU EX ALL MODES OFF" \\ 
		if (SUBMENU[f_idx + 1] != -1) 
            return SUBMENU[f_idx + 1] - SUBMENU[f_idx] - 1;
        return sizeof(SUBMENU) - SUBMENU[f_idx];        
}
/*
// This is for the Mod Menu,this is where we display Mods that are added to the script \\
const string ModNames[] = { "Mod1","Mod2", "Mod3","Profile Btn","Resync Btn","3rd Profile Btns","Mod1 QToggle","Mod2 QToggle","Mod3 QToggle",""};
// ModName Number             0       1       2         3             4             5            6     
function get_modName_chars(f_idx){
	if (ModNames[f_idx + 1] != -1) 
		return ModNames[f_idx + 1] - ModNames[f_idx] - 1;
	return sizeof(ModNames) - ModNames[f_idx];		
} 
*/
function messageTimeout (){                   
	cls_oled(0);    
	//display_title  = FALSE;           
} 

function smartTrackLEDS (){
		if(profile_1_on)led(BrightPurp);
		else
		if(profile_2_on)led(DarkRed3);
		else
		if(profile_3_on)led(MediumRed);
		else
		if(profile_4_on)led(Yellow);
		else
		if(profile_5_on)led(MediumGrn);
		else
		if(PressedMenu)led(MediumBlue);
		

}

function smartTrack (){
		smartTrackLEDS ()
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/
	
				if (!PressedMenu && g(MenuEnterH) && p(MenuEnterP))
        		{ //‚óÅ GAME MENU
                		PressedMenu = 1;
                		switch_modes(0,0,0,0,0,1,6);
        		}
        		else if (!PressedMenu && p(Map))
        		{ //‚óÅ  MAP
                		PressedMenu = 2;
                		switch_modes(0,0,0,0,0,1,7);
        		}
        		else if (!PressedMenu && p(Inventory))
        		{ //‚óÅ  INVENTORY
               			PressedMenu = 3;
                		switch_modes(0,0,0,0,0,1,8);
        		}
        		else if ((PressedMenu == 1 && p(Menu)) || (PressedMenu == 1 && p(MenuExitP)) || ((PressedMenu == 2 && p(Map))  || (PressedMenu == 2 && p(MenuExitP)))|| 
        				((PressedMenu == 3 && p(Inventory)) || (PressedMenu == 3 && p(MenuExitP) || ((PressedMenu != 0 && PressedMenu <= 3 && p(Build))))))
        		{
                		PressedMenu = Off;
                		
                		if (ShotgunReSync)
                		{
                        combo_run(FirstSlotSyncCMB);
                		}
               			switch_modes(0,0,0,0,1,0,5);
        		}
        
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/        
		if(profile_1_on){
        		
				if(BuildVar == 1){
				switch_modes(0,1,0,0,0,0,2);
				} 
				
				if(p(PWeapon)|| p(NWeapon)){  
				switch_modes(0,0,0,0,1,0,5); 

				}
				if(g(Edit)){  
				EditVar = max(EditVar + 1,1);
				switch_modes(0,0,0,1,0,0,4);

				}
				if(g(Pickaxe)||ZoneP){
				PickaxeVar = max(PickaxeVar + 1,1);
				switch_modes(1,0,0,0,0,0,1);

				}
				if(PickaxeVar == 5){
				BuildVar = 0;
				if(r(Pickaxe)||ZoneP)
				switch_modes(1,0,0,0,0,0,1);
				}				
				if(UpVar == 4){
				switch_modes(1,0,0,0,0,0,1);
				}
		}
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		
		if(profile_2_on){
		 
				if(BuildVar == 2 || combo_running(FirstSlotSyncCMB)){
				switch_modes(1,0,0,0,0,0,1);
				BuildVar = 0;
				}
				
				else
				if(g(Edit)){ 
				EditVar = max(EditVar + 4,4);
				switch_modes(0,0,0,1,0,0,4);
				}
				/*else
				if(g(Pickaxe)||ZoneP){				
				PickaxeVar = 5;
				switch_modes(1,0,0,0,0,1);
				PickaxeVar = 0;
				}*/

		}	
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		
		if(profile_3_on){
				   
				if(BuildVar == 2 || combo_running(FirstSlotSyncCMB)){
				switch_modes(0,0,0,0,1,0,5);
				BuildVar = 0;
				}
				if(BuildVar == 4){
				switch_modes(1,0,0,0,1,0,1);
				BuildVar = 0;
				}
				if(g(Edit)){
				EditVar = max(EditVar + 2,2);
				switch_modes(0,0,0,1,0,0,4);
				}
				if(p(Pickaxe||ZoneP)){
				PickaxeVar = max(PickaxeVar + 5,5);
				switch_modes(1,0,0,0,0,0,1);
				}		
		}

/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		
		if(profile_4_on){
		
				if(EditVar == 1){
					if(r(Edit)){//Return to Pickaxe
					switch_modes(1,0,0,0,0,0,1);
					EditVar = 0;
					}
				}
				if(EditVar == 2){
					if(r(Edit)){//Return to Build
					switch_modes(0,0,1,0,0,0,3);
					EditVar = 0;
					}
				}
				if(EditVar == 3){
					if(r(Edit)){//Return to Combat
					switch_modes(0,0,0,0,1,0,5);
					EditVar = 0;
					}
				}
				if(EditVar == 4){
					if(r(Edit)){//Return to PickBuild
					switch_modes(0,1,0,0,0,0,2);
					EditVar = 0;
					}
				}		
		}
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/		
		if(profile_5_on){
					
				if(BuildVar == 1){
				switch_modes(0,0,1,0,0,0,3);
				}
				if(g(Edit)){ 
				EditVar = max(EditVar + 3,3);
				switch_modes(0,0,0,1,0,0,4);
				}
				if(g(Pickaxe)||ZoneP){ 
				switch_modes(1,0,0,0,0,0,1);
				}		
		}
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/			
		if(p(Build)){  
		BuildVar = clamp(BuildVar + 1,0,5);
		}
		
		
}
/*‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê*/
/*‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò*/
// functions on good buildmode END //
int VarT;
function  zero_V(f_var){
		VarT = VarT + get_rtime();

    		if (VarT >= 50){
            f_var = 0;VarT = 0;
            }
}
 
 //	ùêåùêÑùêçùêî ùêÖùêîùêçùêÇùêìùêàùêéùêçùêí
 // Toggle(AimAssistMod, AimAssistL[0]); 
function toggleX (f_hold,f_press,f_name,f_name2){ 
if(g(f_hold) && p(f_press)){  blockBtn = f_press; f_name = !f_name; ToggleName = On;  Toggle(f_name, f_name2);  }
}

function check_jump_time (){

    	if(p(Jump)){
		JumpVar = On; jtime += get_rtime();
		}
		if(JumpVar){
		jtime += get_rtime();
		}
		if(jtime > 2000){
		JumpVar = Off;jtime = Off;
		}
		return 0;
}


function sens_calib (active_sensH,active_sensV,mid,DZL,DZR){

active_sensH = ActiveSensH;
ActiveSensV = active_sensV;
ActiveMZ    = mid;
ActiveDZL 	= DZL;
ActiveDZR 	= DZR;

}

function Toggle(ModT,ModP) {
    
    Modled = ModT;
    ToggleT = 0;
    ToggleTime = On;
    combo_run(VibrateBlink);
    
    if (ToggleName) {
        cls_oled(0);
        printf(5,2,0,1,MiscString[8]);
        rect_oled(0,11,128,20,0,1);    
        rect_oled(2,13,124,16,0,1);
        rect_oled(0,32,128,20,0,1);
        rect_oled(2,34,124,16,0,1);
        printf(5,17,0,1,ModP);

        if (ModT) {
            printf(36,38,0,1,MiscString[7]);    
        }
            else {
                printf(41,38,0,1,MiscString[6]);
            }
                ToggleName = Off;
    }
}

function TimeToggle() {
        
    ToggleT += get_rtime();
    
        if (ToggleT >= 3500) {
            cls_oled(0);
            ToggleTime = Off;
            ToggleT = 0;
    }
}
  
function MenuToggle (Main,Vals,Indx,Print,Toggle) { 

	cls_oled(0); 
	MainMenu    = Main; 
	MenuValues  = Vals;
	ModIndex    = Indx;
	Update      = Print;
	MenuSW  = Toggle;
	MenuTimeout = Off;
}

function PrintMod( ModVal, ModValMin, ModValMax,ModValInc,IndexMin,IndexMax, ModValLbl) { 

	if (Update) 
	{ 
 
		rect_oled(2,2,127,46,1,0); 
		Grid  (); 
		printf(6,25,0,1,MiscString[0]);
		NumX = -43; NumY = 10; NumS = -1; 
		FindDigit(ModIndex,DigitValue(ModIndex));
		printf(5,8,0,1,ModValLbl); 

		if (MenuValues) 
		{

			NumX = 0; NumY = 0; NumS = 0;
			FindDigit(ModVal,DigitValue(ModVal));
		} 
			if (MenuSW) { 
 
				if (ModVal) {
 
					printf(51,24,1,1,MiscString[1]); 
				}  
    			else { 
					printf(46,24,1,1,MiscString[2]); 
				} 
			} 
		Update = Off; 
	} 

	if (event_press(Up) || get_ival (Up) && get_ptime (Up) >= 450) {
 
		Update = On;
		ModVal += ModValInc;

            if (ModVal >= ModValMax){ 
                ModMonitor(ModValLbl);
                    return ModValMax;
            }
	} 
 
		if (event_press(Down) || get_ival (Down) && get_ptime (Down) >= 450) { 

			Update = On;
			ModVal -= ModValInc;

				if (ModVal <= ModValMin){
					ModMonitor(ModValLbl);
						return ModValMin;
				}
		}

	if (event_press(Right)) {

		Update = On;
		ModIndex += 1;
 
			if (ModIndex > IndexMax) ModIndex = IndexMin;
	}
  
		if (event_press(Left)) {
			Update = On;
			ModIndex -= 1; 
 
				if (ModIndex < IndexMin) ModIndex = IndexMax;
		} 
	return ModVal;
} 
 
function ModMonitor (Mon) {
    
  //  if (Mon == ModToggle[8]) 
 
} 
   
function Grid () { 
  
	line_oled(126,20,2,20,2,1);
	rect_oled(1,1,127,63,0,1); 
	line_oled(126,46,2,46,2,1);
	line_oled(28,20,28,46,2,1);
}
 
function Scroll () {

		ScrollTime += get_rtime();

	if (ScrollTime >= ScrollWait) {
		ScrollWait = ScrollSpeed;
 
		for(ScrollIndex = 1; ScrollIndex <= 17; ScrollIndex++) { 
 
			if(ScrollIndex + ScrollLine >= sizeof(Scroll)) {
				putc_oled(ScrollIndex,Scroll[ScrollIndex + (ScrollLine - sizeof(Scroll))]); 
			} 
				else {  
					putc_oled(ScrollIndex,Scroll[ScrollIndex + ScrollLine]);
				} 
		} 
			puts_oled(ScrollX,ScrollY,0,ScrollIndex,1);
			ScrollLine++; 
 
	if(ScrollLine >= sizeof(Scroll)) {
		ScrollLine = 0;
	} 
		ScrollChar--; 
 
		if(ScrollChar < 1) {
			ScrollChar = 17; 
			ScrollWait = ScrollDelay;
		}
		ScrollTime = 0; 
	} 
}

function FindDigit (Digit,Digits) { 
 
	if (Digit < 0) {  
		putc_oled(Number,45);
		Number += 1;
		Digit = abs(Digit);
		Count = 1;
	} 
	else  
		Count = 0;
    
	if (Digits == 5) {  
		putc_oled(Number,FontDigits[Digit / 10000]);
		Digit = Digit % 10000;
		Number +=  1;
	} 
	if (Digits >= 4) {
		putc_oled(Number,FontDigits[Digit / 1000]);
		Digit = Digit % 1000; 
		Number += 1;
	}  
	if (Digits >= 3) { 
		putc_oled(Number,FontDigits[Digit / 100]); 
		Digit = Digit % 100; 
		Number +=  1; 
	}  
	if (Digits >= 2) { 
		putc_oled(Number,FontDigits[Digit / 10]); 
		Digit = Digit % 10;
		Number += 1; 
	} 
		putc_oled(Number,FontDigits[Digit]); 
		puts_oled(CenterMod(Digits + Count,1) + NumX,25 + NumY,1 + NumS,Number,1);
		Number = 1; 
}   
    
function DigitValue (Number) { 
   
    	Number = abs(Number);
	if (Number / 10000 > 0) return 5;
	if (Number /  1000 > 0) return 4; 
	if (Number /   100 > 0) return 3; 
	if (Number /    10 > 0) return 2; 
		return 1;
} 
   
function CenterMod (Character,Font) { 
    Position = Character * FontSize[Font][0];
    Position = (127 - Position) / 2;
		return Position;
}





define SPACE       =  32; /*¬¶¬¶       ¬¶¬¶*/	define  _0 = 48,  A = 65, K = 75, U =  85, e = 101, o = 111, y = 121; 
define EXCLAMATION =  33; /*¬¶¬¶   !   ¬¶¬¶*/	define  _1 = 49,  B = 66, L = 76, V =  86, f = 102, p = 112, z = 122; 
define QUOTE       =  34; /*¬¶¬¶   "   ¬¶¬¶*/	define  _2 = 50,  C = 67, M = 77, W =  87, g = 103, q = 113; 
define HASH        =  35; /*¬¶¬¶   #   ¬¶¬¶*/	define  _3 = 51,  D = 68, N = 78, X =  88, h = 104, r = 114; 
define DOLLAR      =  36; /*¬¶¬¶   $   ¬¶¬¶*/	define  _4 = 52,  E = 69, O = 79, Y =  89, i = 105, s = 115; 
define PERCENT     =  37; /*¬¶¬¶   %   ¬¶¬¶*/	define  _5 = 53,  F = 70, P = 80, Z =  90, j = 106, t = 116; 
define AND         =  38; /*¬¶¬¶   &   ¬¶¬¶*/	define  _6 = 54,  G = 71, Q = 81, a =  97, k = 107, u = 117; 
define APOSTROPHE  =  39; /*¬¶¬¶       ¬¶¬¶*/	define  _7 = 55,  H = 72, R = 82, b =  98, l = 108, v = 118; 
define O_BRACKET   =  40; /*¬¶¬¶   (   ¬¶¬¶*/	define  _8 = 56,  I = 73, S = 83, c =  99, m = 109, w = 119; 
define C_BRACKET   =  41; /*¬¶¬¶   )   ¬¶¬¶*/	define  _9 = 57,  J = 74, T = 84, d = 100, n = 110, x = 120; 
define ASTERISK    =  42; /*¬¶¬¶   *   ¬¶¬¶*/ 
define PLUS        =  43; /*¬¶¬¶   +   ¬¶¬¶*/ 
define COMMA       =  44; /*¬¶¬¶   ,   ¬¶¬¶*/ 
define MINUS       =  45; /*¬¶¬¶   -   ¬¶¬¶*/ 
define FULLSTOP    =  46; /*¬¶¬¶   .   ¬¶¬¶*/ 
define F_SLASH     =  47; /*¬¶¬¶   /   ¬¶¬¶*/ 
define COLON       =  58; /*¬¶¬¶   :   ¬¶¬¶*/ 
define SEMICOLON   =  59; /*¬¶¬¶   ;   ¬¶¬¶*/ 
define B_ARROW     =  60; /*¬¶¬¶   <   ¬¶¬¶*/ 
define EQUAL       =  61; /*¬¶¬¶   =   ¬¶¬¶*/ 
define F_ARROW     =  62; /*¬¶¬¶   >   ¬¶¬¶*/ 
define QUESTION    =  63; /*¬¶¬¶   ?   ¬¶¬¶*/ 
define AT          =  64; /*¬¶¬¶   @   ¬¶¬¶*/ 
define O_SQUARE    =  91; /*¬¶¬¶   [   ¬¶¬¶*/ 
define b_SLASH     =  92; /*¬¶¬¶   \   ¬¶¬¶*/ 
define C_SQUARE    =  93; /*¬¶¬¶   ]   ¬¶¬¶*/ 
define U_ARROW     =  94; /*¬¶¬¶   ^   ¬¶¬¶*/ 
define UNDERSCORE  =  95; /*¬¶¬¶   _   ¬¶¬¶*/ 
define TICK        =  96; /*¬¶¬¶   `   ¬¶¬¶*/ 
define O_CURLY     = 123; /*¬¶¬¶   {   ¬¶¬¶*/ 
define BAR         = 124; /*¬¶¬¶   |   ¬¶¬¶*/ 
define C_CURLY     = 125; /*¬¶¬¶   }   ¬¶¬¶*/ 
define WAVE        = 126; /*¬¶¬¶   ~   ¬¶¬¶*/ 
define CROSS       = 127; /*¬¶¬¶   PS  ¬¶¬¶*/ 
define CIRCLE      = 128; /*¬¶¬¶   PS  ¬¶¬¶*/ 
define SQUARE      = 129; /*¬¶¬¶   PS  ¬¶¬¶*/ 
define TRIANGLE    = 130; /*¬¶¬¶   PS  ¬¶¬¶*/ 
define UP          = 131; /*¬¶¬¶ PS+XB ¬¶¬¶*/ 
define DOWN        = 132; /*¬¶¬¶ PS+XB ¬¶¬¶*/ 
define LEFT        = 133; /*¬¶¬¶ PS+XB ¬¶¬¶*/ 
define RIGHT       = 134; /*¬¶¬¶ PS+XB ¬¶¬¶*/ 
define VIEW        = 135; /*¬¶¬¶   XB  ¬¶¬¶*/ 
define MENU        = 136; /*¬¶¬¶   XB  ¬¶¬¶*/ 


const uint8 Scroll[] = {/* 
 ¬¶¬¶> 0 < ¬¶¬¶  ¬¶¬¶> 1 < ¬¶¬¶  ¬¶¬¶> 2 < ¬¶¬¶  ¬¶¬¶> 3 < ¬¶¬¶  ¬¶¬¶> 4 < ¬¶¬¶  ¬¶¬¶> 5 < ¬¶¬¶  ¬¶¬¶> 6 < ¬¶¬¶  ¬¶¬¶> 7 < ¬¶¬¶  ¬¶¬¶> 8 < ¬¶¬¶  ¬¶¬¶> 9 < ¬¶¬¶ ¬¶¬¶> 10 < ¬¶¬¶ ¬¶¬¶> 11 < ¬¶¬¶ ¬¶¬¶> 12 < ¬¶¬¶ ¬¶¬¶> 13 < ¬¶¬¶ ¬¶¬¶> 14 < ¬¶¬¶ ¬¶¬¶> 15 < ¬¶¬¶ ¬¶¬¶> 16 < ¬¶¬¶*/
    SPACE   ,  SPACE   ,  TRIANGLE ,   SPACE   ,     O     ,     r     ,   SPACE   ,     Y     ,   SPACE   ,     T     ,     o     ,   SPACE   ,     E     ,     x     ,     i     ,     t     ,   SPACE   , 
    SPACE   ,  CROSS   ,   SPACE   ,     O     ,     r     ,   SPACE   ,     A     ,   SPACE   ,     T     ,     o     ,   SPACE   ,     N     ,     e     ,     x     ,     t     ,   SPACE   ,    MENU   , 
    SPACE   ,   UP     ,   SPACE   ,     O     ,     r     ,   SPACE   ,   DOWN    ,   SPACE   ,     T     ,     o     ,   SPACE   ,     A     ,     d     ,     j     ,     u     ,     s     ,     t     , 
    SPACE   ,  LEFT    ,   SPACE   ,     O     ,     r     ,   SPACE   ,   RIGHT   ,   SPACE   ,     N     ,     e     ,     x     ,     t     ,   SPACE   ,     M     ,     o     ,     d     ,   SPACE   };

const int8 DamPolar[]= {
    100,100,100,100,100,100,100,100,99,99,99,99,98,98,97,97,97,96,95,95,94,94,93,92,92,91,90,89,89,88,87,86,85,84,83,82,81,80,79,78,77,75,74,73,72,
    71,70,69,67,66,65,63,62,61,59,58,56,55,53,52,50,49,47,46,44,43,41,40,38,36,35,33,31,30,28,26,25,23,21,20,18,16,14,13,11,9,7,6,4,2,0,-1,-3,-5,-7,
    -8,-10,-12,-13,-15,-17,-19,-20,-22,-24,-25,-27,-29,-30,-32,-34,-35,-37,-39,-40,-42,-43,-45,-46,-48,-50,-51,-53,-54,-55,-57,-58,-60,-61,-62,-64,
    -65,-66,-68,-69,-70,-71,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-89,-90,-91,-92,-92,-93,-93,-94,-95,-95,-96,-96,-97,
    -97,-97,-98,-98,-99,-99,-99,-99,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-99,-99,-99,-98,-98,-98,-97,-97,-96,-96,-95,
    -94,-94,-93,-93,-92,-91,-90,-90,-89,-88,-87,-86,-85,-84,-83,-82,-81,-80,-79,-78,-77,-76,-75,-74,-72,-71,-70,-69,-67,-66,-65,-63,-62,-61,-59,-58,
    -56,-55,-53,-52,-50,-49,-47,-46,-44,-43,-41,-40,-38,-36,-35,-33,-31,-30,-28,-26,-25,-23,-21,-20,-18,-16,-14,-13,-11,-9,-7,-6,-4,-2,0,2,4,6,7,9,
    11,13,14,16,18,20,21,23,25,26,28,30,31,33,35,36,38,40,41,43,44,46,47,49,51,52,54,55,56,58,59,61,62,63,65,66,67,69,70,70,72,73,74,75,77,78,79,80,
    81,82,83,84,85,86,87,88,89,89,90,91,92,92,93,94,94,95,95,96,97,97,97,98,98,99,99,99,99,100,100,100,100,100,100,100};
    
/*üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá */

/*ùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉ*/

//‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚ñº ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê,‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚ñ≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^  üîö üõë ‚ñ∫ ‚óÑ ‚ñ≤ ‚ñº ‚óÅ ‚ñ∑ ‚ñ≥ ‚úñ
//	ùêâùêîùêçùêä ùêÉùêëùêÄùêñùêÑùêë  //|üîö|\\ //|üõë|\\ //|‚õîÔ∏è|\\pdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqp 	‚úñ
/*
if((isqrt(pow(abs(get_ival(PS4_LX)),2) + pow(abs(get_ival(PS4_LY)),2)) >= 90)

if(event_release(XB360_LB) && get_ptime(XB360_LB) < 500) combo_run(special);

\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\%\

pdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqpdbqp

^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^

<<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>><<>>

--<<O>>--<<O>>--<<O>>--<<O>>--<<O>>--<<O>>--<<O>>--<<O>>-

<*><*><*><*><*><*><*><*><*><*><*><*><*><*><*><*><*><*><*><*>


 // 	ùêìùêëùê¢ùêÜùêÜùêÜùêÑùêëùêëùêë	ùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉùñÉ		üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá üÜá	‚ùå‚ùå‚ùå  üÜá üÜá üÜá	‚ùå‚ùå‚ùå
//Dead Zone
if (abs(get_val(XB1_LY)) < 0 && abs(get_val(XB1_LX)) < 0 ){ 
set_val(XB1_LY,0); 
set_val(XB1_LX,0); 
} 
if (abs(get_val(XB1_RY)) < 0 && abs(get_val(XB1_RX)) < 0 ){ 
set_val(XB1_RY,0); 
set_val(XB1_RX,0); 
}

Roman Numeral One	‚Ö†	‚Ö†	&#x2160;
Roman Numeral Two	‚Ö°	‚Ö°	&#x2161;
Roman Numeral Three	‚Ö¢	‚Ö¢	&#x2162;
Roman Numeral Four	‚Ö£	‚Ö£	&#x2163;
Roman Numeral Five	‚Ö§	‚Ö§	&#x2164;
Roman Numeral Six	‚Ö•	‚Ö•	&#x2165;
Roman Numeral Seven	‚Ö¶	‚Ö¶	&#x2166;
Roman Numeral Eight	‚Öß	‚Öß	&#x2167;
Roman Numeral Nine	‚Ö®	‚Ö®	&#x2168;
Roman Numeral Ten	‚Ö©	‚Ö©	&#x2169;
Roman Numeral Eleven	‚Ö™	‚Ö™	&#x216a;
Roman Numeral Twelve	‚Ö´	‚Ö´	&#x216b;


noozbar trick to return to zero

	if( event_press( XB1_DOWN ) )   { 
		f_var++;
		construct = 1;
		GM_changed = TRUE;
		if( f_var > max_val ) f_var =  min_val; 
		return f_var;
	}


*/

 /*
              ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó
              ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë
              ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë
              ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë
                ‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë
                ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù
 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                                                                                                                                                  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
 ‚îÇX-/Y-‚îÇ   DEFINITIONS AND VISUAL GRID                             VERSATOUCH 6 BY TRIGGGERRR                              DEFINITIONS AND VISUAL GRID    ‚îÇX+/Y-‚îÇ
 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
         ‚îå‚îò                             ‚îÇ ‚îÇ                                  ‚îÇ Y-100‚îÇ                                  ‚îÇ ‚îÇ                             ‚îî‚îÄ‚îê
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-90 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-80 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-70 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ            ZONE 1            ‚îÇ ‚îÇ             ZONE 2               ‚îÇ Y-60 ‚îÇ             ZONE 3               ‚îÇ ‚îÇ           ZONE 4              ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-50 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-40 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-30 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-20 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y-10 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
         X-100  X-90   X-80   X-70   X-60   X-50   X-40   X-30   X-20   X-10   ZERO   X+10   X+20   X+30   X+40   X+50   X+60   X+70   X+80   X+90   X+100
         ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y+10 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y+20 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y+30 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y+40 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ            ZONE 5            ‚îÇ ‚îÇ                                  ‚îÇ Y+50 ‚îÇ                                  ‚îÇ ‚îÇ           ZONE 6              ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ Y+60 ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îÇ                              ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                               ‚îÇ
         ‚îî‚îê                             ‚îÇ ‚îÇ                                  ‚îÇ Y+70 ‚îÇ                                  ‚îÇ ‚îÇ                              ‚îå‚îò
          ‚îî‚îê                            ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                             ‚îå‚îò
           ‚îî‚îê                           ‚îÇ ‚îÇ                                  ‚îÇ Y+80 ‚îÇ                                  ‚îÇ ‚îÇ                            ‚îå‚îò
            ‚îî‚îê                          ‚îÇ ‚îÇ                                  ‚îÇ      ‚îÇ                                  ‚îÇ ‚îÇ                           ‚îå‚îò
             ‚îî‚îê                         ‚îÇ ‚îÇ                                ‚îå‚îÄ‚îò Y+90 ‚îî‚îÄ‚îê                                ‚îÇ ‚îÇ                          ‚îå‚îò
  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îî‚îê                        ‚îÇ ‚îÇ                              ‚îå‚îÄ‚îò          ‚îî‚îÄ‚îê                              ‚îÇ ‚îÇ                         ‚îå‚îò    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
  ‚îÇX-/Y+‚îÇ      ‚îî‚îê                       ‚îÇ ‚îÇ                             ‚îå‚îò     Y+100    ‚îî‚îê                             ‚îÇ ‚îÇ                        ‚îå‚îò     ‚îÇX+/Y+‚îÇ
  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
*/
/*
                                                                          5Q
                                                                          BB.
                                                                        L1QBZg
                                                                      ..7:. .r:..
                                                                     7X    .   uU
                                                                     5 igBBBBBv r.
                                                                 ..iL PBBBBBBBBB rv.:.
                                                                v  v :TRIGGGERRRB P  ::
                                                               s 2BB :BBBBQBQBBBY BBQ .i
                                                              1 LBBBi RQBBBQBQBQ .BBBB :.
  bQZDEDEDdDEDEZEZEDEZdDZgRD   KQgZDZDEZdEbEPbKX5SISIS5SSU.   S iBBBBv rBBBBBQr vBBBBZ u.   :bMRgMgRgMgRgMgMgMgRgMQB.
  BBBBBBBBBBBBBBBBBBBBBQBBBB   BBBBQBBBQBBBQBBBQBBBBBBBBBBB   .g .QBBg.   .     vdDbi Q2   KBBBQBBBBBBBQBBBBBBBBBBBB:
  QBBBBBBBBBBBBBBBBBBBBBBBBB   BBBBBBBBBBBBBBBBBQBBBBBBBBBB    B.       BEriUg        B:  .BBBBBBBBBBBBBBBBBBBBBBBQB.
  QBBQBQRgBBBBBBBQbKdPEbEbMb   QBQBBBBBBBBQQBQQQQRgBBBBBBBB   .B :BBBB: B    v  BBBQB..j  iBBBBBBBBMMQBQQQBQQQBQBQBB.
          ZBBBBBBR                                  BBBBQBB   J .BBBBBB ::.r:: BBBBBBB .. .BBBQBBBB
          gBBBBBBQ                                  BBBBBBB   B .BBBBBB  iISv  PBBBBBK s  :BBBBQBBB
          RBQBBBBB               rXQdDZdPEdEPEPEPP5RBBBBBBQ   .Q :DBD5  QBBBBB.  7L1. 7   iBBBBBBBB
          QBBBBBBB             rBBBBBBBBBBBBBBBBBQBBBBBBBBB     u       BQBBBBS  :r .M    7BBBBBBBB    BBQBBBBBBBQBQ
          RBQBQBBB             BBBBBBBBBBBQBBBBBQBBBBBBBBBB      :BBBBP iBBBBB YBM:  rMr  rBBBBBBBB    BBBBBBBBBBBQB.
          QBBBBBBB             dBBBBBBB: .7QBBBBBBBBBBBQBBB     sQBBBBBZ      :BB      P. iBBBBQBBB    QBBBBBBBBBBBB.
          MBBBQBBB             UBBQBBB7     1BBBBBBBQBBBBd:    Rv  7PgQKPBjjdBr:BZ   .::7 :BBBQBBBQ            BBBBB
          QBBBBQBB             jBBBBBB1      BBBBBBBBBj       MS        gBBBBv: vdi.   :Y :QBBBBBBB            BBQBB.
          QBQBBBBB             UBBQBBBj      BBBBBBB:         MJ        SBBBQi     :U  :  :BBBQBBBBBBBQBBBQBBBQBBBBB
          BBBBBBBB             RBBBBBB2     IBBBBBD            BP:      KZBBg::     :iLB  :BBBBQBBBBBBBQBQBBBQBBBBBB.
          BBBBBBBB             BBBBBQBP     QBBBBQ             BBBBEuLi:BDQBRKPr.. :BBd.   bBBBBBBBBBBBBBBBBBBBBBBBB.
          i7rirrvi             .7iiii7.     XBBBB             BBJ  .irr.BBBBBQ2I2YYr s:     :EBBBQBQBQBQQQBQBBBBBBQ7
                                            .BBBB             BB         vu1s:       rj
                                             BBBB             rB                    S1
                                              BBBg             BBBUvi:.        .:sYIBs
                                              .BBBr           XQBJ.iv1PXu77ri:::.    u:
                                               .QBB.          iBB        ..          5
                                                 PBB.          JBd.              .rPB
                                                   BBP          EBQLr77Yri....::::  B
                                                    .QB.        rB      :ir:.      rS
                                                                 BP.           .sMBi
                                                                   rBBQgXv:7dBBXvvd
                                                                    BI sBBBBBXR   :
                                                                    BI.jB     ii:Z5
                                                                     Y5BB     vBKY
                                                                       :B5XXKIB:
                                                                         r77ri

                                                  
*/
/*
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,                         ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,                              ,,,,,,,,,,,,,,,,,,,,,,,,,,,,                              ,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,               ,is2S9GGGG9hsi,, ,,,,,,,,,,,,,,,,,,,,,,,,,,,, ,,:s2hGMGG9hXsr,                ,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,        ,2ShMBBBBBBBBGsi:::,,,,,, ,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ,,,,,::::r9BBBBBBBBB9S5i        ,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,      2BBBBBBBBBBs:               ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,               ,:9BBBBBBBBBh:     ,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,     GBBBBMMBBB2                  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                  rBBBMMBBBBBs    ,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,   ,BBBMMMMMBB               ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,               hBMMMMMBBB2    ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,    BBMMMMMMMBr      ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,       MBMMMMMMBBi   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   ,BBMMMMMMBB    ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,    sBMMMMMMMBh   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBG    ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBG   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB    ,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,     sBMMMMMMMBG   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBBMMMMMMMB     ,,,,,,,,,,,,,,,,,,
,,,,,,,,,,           BBMMMMMMBBs   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   ,BBBMMMMMMB,          ,,,,,,,,,,,,
,,,,                9BBMMMBBBBi    ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,    GBBBBMMMBB:               ,,,,,,
,,,              :9BBBBBBBBBr     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,     :9BBBBBBBBBr,             ,,,,,
,,,   ,,,, ,rhGGBBBBBB92s:       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,        s2SMBBBBBMG9s,  ,,,,  ,,,,,
,,, ,:sMBBBBBBBBGr              ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,              :5BBBBBBBBBhr,  ,,,,
,,,    ,,:::r9BBBBBBBBMss:       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,       ,ss9BBBBBBBBGsi::,,    ,,,,,
,,,,             rGBBBBBBBBBs     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,     :GBBBBBBBBBs:             ,,,,,
,,,,,               GBMMMMBBBBs    ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   ,BBBBBMMMBBr               ,,,,,,
,,,,,,,,,            BBMMMMMMBBs   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   ,BBBMMMMMMB,            ,,,,,,,,,,
,,,,,,,,,,,,,,,,     sBMMMMMMMBG   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBBMMMMMMMB     ,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB    ,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBM   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   sBMMMMMMMBG   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBB,  ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,   iBBMMMMMMBM    ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   sBMMMMMMMBG   ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,    BBMMMMMMMB:     ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,      9BMMMMMMBBs   ,,,,,,,,,,,,,,,,,,,,i5
,,,,,,,,,,,,,,,,,,,   iBBBMMMMMBG            ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,            sBMMMMMMBBG    ,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,    ,MBBBBMMBBBr                  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                   9BBMMBBBBB2    ,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,     ,hBBBBBBBBBh,                ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                 sBBBBBBBBBGr      ,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,        :hGMBBBBBBBGGSr,,,,,,, ,, ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   ,,,,,,,:2GMBBBBBBBMG9s        ,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,             ,,:ishGGGGMBMGXsi,, ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,:s29MBMMGGGG2r::,             ,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,                              ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                              ,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,                          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*/
   int trigLEDs,trigLEDi;
   define
   DarkBlue    = 0,   MediumBlue  = 1,    BrightBlue  = 2,     DarkRed3    = 3,    MediumRed   = 4,    BrightRed   = 5,    DarkGrn     = 6,    MediumGrn   = 7,   BrightGrn   = 8,      arkViolet  = 9,    MediumViolet= 10,
   BrightViolet= 11,  Whi         = 12,   Whi2        = 13,    Whi3        = 14,   DarkPurp    = 15,   MediumPurp  = 16,   BrightPurp  = 17,   DarkYel     = 18,  MediumYel   = 19,     rightYel   = 20,   DarkCoral   = 21,
   MediumCoral = 22,  BrightCoral = 23,   Aqua        = 24,    Blue1       = 25,   Blue2       = 26,   Blue3       = 27,   Blue4       = 28,   Cobalt      = 29,  RBlu2       = 30,     Blu3       = 31,   BRed2       = 32,
   BRed3       = 33,  HotPink     = 34,   Pink        = 35,    BabyPink    = 36,   LightPink   = 37,   DarkOrange  = 38,   LightOrange = 39,   Yellow      = 40,  DarkOrange1 = 41,     LightOrang1= 42,   YellowGreen = 43,
   Emerald1    = 44,  Emerald2    = 45,   Emerald3    = 46,    LEDSOff     = 47;
   data(
   1,0,0,0,     2,0,0,0,     3,0,0,0,     0,1,0,0,      0,2,0,0,     0,3,0,0,    0,0,1,0,      0,0,2,0,     0,0,3,0,     0,0,0,1,     0,0,0,2,      0,0,0,3,      1,1,1,0,      2,2,2,0,      3,3,3,0,      1,1,0,0,
   2,2,0,0,     3,3,0,0,     0,1,1,0,     0,2,2,0,      0,3,3,0,     1,0,1,0,    2,0,2,0,      3,0,3,0,     2,0,3,0,     3,0,2,0,     3,0,1,0,      2,0,1,0,      3,1,1,0,      2,1,1,0,      3,1,0,0,      2,1,0,0,
   3,2,0,0,     2,3,0,0,     1,3,0,0,     1,2,0,0,      1,3,1,0,     1,2,1,0,    0,3,1,0,      0,2,1,0,     0,3,2,0,     0,2,3,0,     0,1,2,0,      0,1,3,0,      1,1,2,0,      1,1,3,0,      1,0,2,0,      0,0,0,0);

   function led(f_color)	{ 	for(trigLEDi = 0; 	trigLEDi <= 3; trigLEDi++)  {	set_led(trigLEDi,duint8((f_color * 4) + trigLEDi));  }	}
   
/*   ùêÄùêÉùêâùêîùêíùêìùêåùêÑùêçùêì ùêàùêçùêíùêìùêëùêîùêÇùêìùêàùêéùêçùêí                             						   
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                                                                                                                          ‚îÇ
‚îÇ     ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  ADJUSTING ANTI RECOIL  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  ‚îÇ
‚îÇ                                               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                                                   ‚îÇ
‚îÇ                            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§   PRESS AND HOLD A   ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                              ‚îÇ
‚îÇ                            ‚îÇ                  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                    ‚îÇ                              ‚îÇ
‚îÇ                                                                                                                          ‚îÇ
‚îÇ                     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                       ‚îå‚îÄ‚îê                     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                      ‚îÇ
‚îÇ                     ‚îÇPRESS DPAD UP‚îÇ                       ‚îÇ ‚îÇ                     ‚îÇPRESS DPAD DOWN‚îÇ                      ‚îÇ
‚îÇ                     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                       ‚îÇ ‚îÇ                     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                      ‚îÇ
‚îÇ                       LED = GREEN                         ‚îÇ ‚îÇ                          LED = PINK                        ‚îÇ
‚îÇ                       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                          ‚îÇ ‚îÇ                        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                        ‚îÇ
‚îÇ                       ‚îÇVERTICAL‚îÇ                          ‚îÇ ‚îÇ                        ‚îÇHORIZONTAL‚îÇ                        ‚îÇ
‚îÇ                       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                          ‚îÇ ‚îÇ                        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                        ‚îÇ
‚îÇ                                                           ‚îî‚îÄ‚îò                                                            ‚îÇ
‚îÇ                                                                                                                          ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇTAP LB/L1 TO DECREASE VALUE‚îÇ ‚îÇTAP RB/R1 TO INCREASE VALUE‚îÇ  ‚îÇ   TAP LB/L1 TO MOVE LEFT  ‚îÇ ‚îÇ  TAP RB/R1 TO MOVE RIGHT  ‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                                                                                                          ‚îÇ
‚îÇ                                LED WILL BE TURNED OFF WHEN IT IS NOT IN ADJUSTMENT MODE                                  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                                                                                                                          ‚îÇ
‚îÇ                                                ADJUSTING RAPID FIRE-                                                     ‚îÇ
‚îÇ                                         ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                                             ‚îÇ
‚îÇ                            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§ PRESS AND HOLD XB1/VIEW-PS4/SHARE‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                              ‚îÇ
‚îÇ                            ‚îÇ            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò              ‚îÇ                              ‚îÇ
‚îÇ                        (RF_HOLD)                                                      (RF_NULL)                          ‚îÇ
‚îÇ                            ‚îÇ                                                              ‚îÇ                              ‚îÇ
‚îÇ                            ‚ñº                                                              ‚ñº                              ‚îÇ
‚îÇ                 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                                  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                  ‚îÇ
‚îÇ                 ‚îÇPRESS AND HOLD PS4_CROSS‚îÇ                                  ‚îÇPRESS AND HOLD PS4_CIRCLE‚îÇ                  ‚îÇ
‚îÇ                 ‚îî‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îò                                  ‚îî‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îò                  ‚îÇ
‚îÇ                  ‚îÇ                      ‚îÇ                                     ‚îÇ                      ‚îÇ                   ‚îÇ
‚îÇ                  ‚îÇ                      ‚îÇ                                     ‚îÇ                      ‚îÇ                   ‚îÇ
‚îÇ                  ‚îÇ                      ‚îÇ                                     ‚îÇ                      ‚îÇ                   ‚îÇ
‚îÇ                  ‚ñº                      ‚ñº                                     ‚ñº                      ‚ñº                   ‚îÇ
‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ
‚îÇ ‚îÇTAP LB/L1 TO DECREASE VALUE‚îÇ ‚îÇTAP RB/R1 TO INCREASE VALUE‚îÇ  ‚îÇTAP LB/L1 TO DECREASE VALUE‚îÇ ‚îÇTAP RB/R1 TO INCREASE VALUE‚îÇ ‚îÇ
‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ
‚îÇ                                                                                                                          ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
     */
s
